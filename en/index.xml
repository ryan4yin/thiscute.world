<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://gohugo.io/" version="0.136.5">Hugo</generator><title type="html">This Cute World</title><link href="https://thiscute.world/en/" rel="alternate" type="text/html" title="html"/><link href="https://thiscute.world/en/index.xml" rel="self" type="application/atom+xml" title="atom"/><link href="https://thiscute.world/en/index.json" rel="alternate" type="application/json" title="json"/><updated>2025-04-16T06:08:23+00:00</updated><id>https://thiscute.world/en/</id><entry><title type="html">KubeCon China 2024 Adventure</title><link href="https://thiscute.world/en/posts/kubecon-china-2024/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://thiscute.world/en/posts/my-experience-of-nixos/?utm_source=atom_feed" rel="related" type="text/html" title="OS as Code - My Experience of NixOS"/><link href="https://thiscute.world/en/posts/why-i-choose-niche-products/?utm_source=atom_feed" rel="related" type="text/html" title="Why do I explore these niche technologies?"/><link href="https://thiscute.world/en/posts/nixos-and-flake-basics/?utm_source=atom_feed" rel="related" type="text/html" title="NixOS &amp; Nix Flakes - A Guide for Beginners"/><link href="https://thiscute.world/en/posts/2021-summary/?utm_source=atom_feed" rel="related" type="text/html" title="Summary of My 2021"/><link href="https://thiscute.world/en/now/?utm_source=atom_feed" rel="related" type="text/html" title="Now"/><id>https://thiscute.world/en/posts/kubecon-china-2024/</id><published>2024-08-27T10:10:22+08:00</published><updated>2024-09-05T15:54:00+08:00</updated><summary type="html">&lt;h2 id="preface" class="headerLink">
&lt;a href="#preface" class="header-mark">&lt;/a>Preface&lt;/h2>&lt;p>I had known for a while that KubeCon China would be held in Hong Kong this year, and while
I was interested, I initially got deterred by the steep price of KubeCon tickets.&lt;/p>
&lt;p>Sometimes you just have to believe in the magic of luck. By a twist of fate, I learned
about KubeCon&amp;rsquo;s &amp;lsquo;End User Ticket Program&amp;rsquo; from my friend @Kev and snagged a ticket for
free. I also invited three friends from the &lt;a href="https://0xffff.one/" target="_blank" rel="noopener noreferrer">0xFFFF Community&lt;/a>,&lt;a href="https://0xffff.one/u/Chever-John" target="_blank" rel="noopener noreferrer">@Chever-John&lt;/a>,&lt;a href="https://0xffff.one/u/0xdeadbeef" target="_blank" rel="noopener noreferrer">@0xdeadbeef&lt;/a>, and&lt;a href="https://0xffff.one/u/MingLLuo" target="_blank" rel="noopener noreferrer">@MingLLuo&lt;/a>, to join in. We rented an Airbnb in Hong Kong,
explored quite a few places in the city, and had a fruitful trip.&lt;/p>
&lt;blockquote>
&lt;p>I also tried to invite other friends and colleagues, but they couldn&amp;rsquo;t make it for
various reasons, which was a bit of a bummer.&lt;/p>
&lt;/blockquote></summary><content type="html"><![CDATA[<h2 id="preface" class="headerLink">
    <a href="#preface" class="header-mark"></a>Preface</h2><p>I had known for a while that KubeCon China would be held in Hong Kong this year, and while
I was interested, I initially got deterred by the steep price of KubeCon tickets.</p>
<p>Sometimes you just have to believe in the magic of luck. By a twist of fate, I learned
about KubeCon&rsquo;s &lsquo;End User Ticket Program&rsquo; from my friend @Kev and snagged a ticket for
free. I also invited three friends from the <a href="https://0xffff.one/" target="_blank" rel="noopener noreferrer">0xFFFF Community</a>,<a href="https://0xffff.one/u/Chever-John" target="_blank" rel="noopener noreferrer">@Chever-John</a>,<a href="https://0xffff.one/u/0xdeadbeef" target="_blank" rel="noopener noreferrer">@0xdeadbeef</a>, and<a href="https://0xffff.one/u/MingLLuo" target="_blank" rel="noopener noreferrer">@MingLLuo</a>, to join in. We rented an Airbnb in Hong Kong,
explored quite a few places in the city, and had a fruitful trip.</p>
<blockquote>
  <p>I also tried to invite other friends and colleagues, but they couldn&rsquo;t make it for
various reasons, which was a bit of a bummer.</p>

</blockquote><h2 id="tldr" class="headerLink">
    <a href="#tldr" class="header-mark"></a>TL;DR</h2><p>This post is heavy on images and some non-technical content. For friends who are more
interested in the tech side, let me give you a quick summary.</p>
<p>After returning from KubeCon, I also watched some other CNCF conference videos, and these
are the ones that left an impression:</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=9EARwoRStBY&amp;list=PLj6h78yzYM2N8nw1YcqqKveySH6_0VnI0&amp;index=4" target="_blank" rel="noopener noreferrer">Keynote: Cloud Native in its Next Decade - KubeCon Europe 2024</a>:
Discussed the future of CloudNative, drawing conclusions similar to what was heard live
at KubeCon China.</li>
<li><a href="https://www.youtube.com/watch?v=2MFwz0WCnuE&amp;list=PLj6h78yzYM2M3MubjXdYRsish04DcKKLT&amp;index=7" target="_blank" rel="noopener noreferrer">Another Choice for Istio Multi-Cluster &amp; Multi-Network Deployment Model - KubeCon Europe 2024</a>:
Addressed the pain points of Istio&rsquo;s multi-cluster solutions and introduced China
Mobile&rsquo;s solution. I&rsquo;ve always wanted to try multi-cluster solutions but hesitated due
to concerns about manageability. This video provided some inspiration.</li>
<li><a href="https://www.youtube.com/watch?v=8JBwQ6T-ZKE&amp;list=PLj6h78yzYM2NNl95W4Rtp0e0MX9FCw8RN&amp;index=9" target="_blank" rel="noopener noreferrer">DRA in KubeVirt: Overcoming Challenges &amp; Implementing Changes - KubeCon Europe 2024</a>:
DRA is a new API in K8s, and this talk showed how to use it in kubevirt to solve some
issues. It&rsquo;s evident that K8s has introduced quite a few new things in recent years.</li>
</ul>
<p>Based on the three-day experience at KubeCon China and the content of the videos above,
here&rsquo;s my take:</p>
<ol>
<li>Almost everyone discussing networking was talking about eBPF, Envoy, and Gateway API.</li>
<li>Istio&rsquo;s Ambient Mode attracted many companies that had previously given up on service
meshes due to sidecar performance issues.</li>
<li>Karmada&rsquo;s multi-cluster management solution has been put into practical use by many
companies and was a frequent topic of discussion.</li>
<li>There were also quite a few talks on AI and WASM, but I found them a bit boring as I&rsquo;m
not very interested in those areas.</li>
<li>Companies like NIO and China Mobile are trying to apply K8s in edge computing scenarios
(smart cars, communication base stations), which seems a bit distant from ordinary
internet companies.</li>
<li>What will the next decade of cloud native look like?
<ul>
<li>Technologies like Kubernetes and Service Meshes, which emerged over the past decade,
have now become &ldquo;<strong>Boring but useful infrastructure</strong>&rdquo; and will serve as the
foundation for other cloud native technology trends, widely used but not undergoing
much change themselves.</li>
<li>Technologies such as AI, eBPF, WASM, and Rust will mature over the next decade,
replacing Kubernetes&rsquo; current position.</li>
</ul>
</li>
</ol>
<p>The KubeCon China 2024 conference videos will be added to the following YouTube Playlist
for those interested to watch:</p>
<ul>
<li><a href="https://www.youtube.com/playlist?list=PLj6h78yzYM2NcAGHRxgBHY8x3QTfnZQCv" target="_blank" rel="noopener noreferrer">KubeCon + CloudNativeCon + Open Source Summit + AI_dev China 2024 - Youtube</a>
The PPTs related to the videos can be downloaded here:</li>
<li><a href="https://kccncossaidevchn2024.sched.com/" target="_blank" rel="noopener noreferrer">KubeCon China 2024 - Schedule</a></li>
</ul>
<h2 id="technical-insights" class="headerLink">
    <a href="#technical-insights" class="header-mark"></a>Technical Insights</h2><p>My main focus at the conference was on topics related to Istio and Gateway API. I&rsquo;ve been
researching Istio&rsquo;s Ambient Mode recently and wanted to gain a deeper understanding of the
implementation details and trade-offs from the conference.</p>
<p>The three days of talks met my expectations well. Core contributors to Istio/Envoy
Gateway/Ingress Controller shared the latest advancements in these projects, as well as
implementation details and future development directions.</p>
<p>Ambient Mode is in beta and was a focal point for me. Here are some key points I&rsquo;ve
gathered:</p>
<ol>
<li><a href="https://github.com/istio/ztunnel" target="_blank" rel="noopener noreferrer">istio/ztunnel</a>: A userspace L4 proxy that only
handles L4 traffic.
<ul>
<li>ztunnel establishes connections separately with upstream and downstream, turning a
single connection into three (A &lt;=&gt; ztunnel &lt;=&gt; ztunnel &lt;=&gt; B), which incurs
performance overhead.</li>
<li>Since all traffic is forwarded through ztunnel, updating it can cause a brief traffic
interruption. A good solution might be to use a recreate update strategy and roll out
updates to all nodes in a node group.</li>
<li>ztunnel&rsquo;s use of the HBONE protocol enforces mTLS, which cannot be turned off, adding
performance overhead in scenarios where security is not a concern.</li>
</ul>
</li>
<li><a href="https://github.com/istio/proxy" target="_blank" rel="noopener noreferrer">istio/proxy</a>: An L7 proxy based on Envoy, deployed
separately as a waypoint in ambient mode to handle L7 traffic.
<ul>
<li>In the waypoint architecture, the proxy and the upstream/downstream Pods are likely
on different nodes, leading to an additional network hop compared to the sidecar
model, which may result in performance loss and increased cross-Zone traffic.</li>
<li>Both the waypoint and sidecar are envoy, and the goal is to reduce the number of
envoy containers to decrease resource consumption.</li>
</ul>
</li>
</ol>
<p>And some other solutions:</p>
<ul>
<li><a href="https://github.com/kmesh-net/kmesh" target="_blank" rel="noopener noreferrer">kmesh</a>: Similar to Ambient Mode in architecture, it
uses eBPF exclusively for the L4 proxy, offering better performance as eBPF modifies
network packets directly in the kernel space without establishing separate connections
with upstream and downstream. Also, eBPF program updates do not interrupt traffic.</li>
<li><a href="https://cilium.io/use-cases/service-mesh/" target="_blank" rel="noopener noreferrer">cilium service mesh</a>: Features a per-node
proxy with L7 envoy proxy running on each node, unlike the waypoint deployed separately
via deployment. However, it has some issues:
<ul>
<li>The per-node proxy cannot flexibly adjust resource usage, potentially leading to
resource wastage.</li>
<li>All traffic on the same node is processed by the same envoy proxy, unable to achieve
namespace-level traffic isolation like the waypoint.</li>
<li>It is tightly bound to cilium cni and can only be used with cilium cni.
<ul>
<li>It is said to be more complex to use?</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>Overall, KubeCon was a great opportunity to learn about the latest trends in the industry,
meet developers of projects, and network with other tech professionals. It helped broaden
my technical horizons, maintain my enthusiasm and motivation for technology, and avoid
being insular in my company&rsquo;s business.</p>
<h2 id="itinerary" class="headerLink">
    <a href="#itinerary" class="header-mark"></a>Itinerary</h2><h3 id="accommodation" class="headerLink">
    <a href="#accommodation" class="header-mark"></a>Accommodation</h3><p>Since we were staying in Hong Kong for three days, accommodation was a necessary
consideration. My friends, who had experience with travel and lodging, helped us find an
Airbnb not far from the conference venue. The experience was quite pleasant; the room was
clean, tidy, and had a certain charm. Although I found it a bit small, my friends said
this space is the standard for a family of three or four in Hong Kong and was much better
than hotels in the same price range.</p>
<h3 id="day-1" class="headerLink">
    <a href="#day-1" class="header-mark"></a>Day 1</h3><p>Even though we booked our accommodations in advance and did some homework, we hit a snag
on the first day – persistent rain in Shenzhen led to @Chever-John&rsquo;s flight being canceled
outright, and even the replacement flight was delayed. He arrived at the venue on time,
but he had only slept for two hours and didn&rsquo;t get to stay at the hotel he booked in
Shenzhen the night before. On the first day, he seemed pretty out of it during the
sessions. But hey, no worries – ~<del>at least I got to enjoy the talks to the fullest</del>.</p>
<p>Back to the main event, after picking up our badges, we kicked off our three-day KubeCon
China adventure.</p>
<p>The technical content has been summarized earlier, so here I&rsquo;ll just share some photos.</p>
<p><figure><img src="/images/kubecon-china-2024/IMG20240821084905_20240905145523.webp" width="80%"><figcaption>
      <h4>The main hall corridor, not a bad view of the sea</h4>
    </figcaption>
</figure>

<figure><img src="/images/kubecon-china-2024/IMG20240821143748_20240905145522.webp" width="80%"><figcaption>
      <h4>The corridor leading to various meeting rooms, the hotel service was spot on</h4>
    </figcaption>
</figure>

<figure><img src="/images/kubecon-china-2024/IMG20240821175102_20240905145522.webp" width="80%"><figcaption>
      <h4>Tea break during lunch, well-fed and watered</h4>
    </figcaption>
</figure>

<figure><img src="/images/kubecon-china-2024/IMG20240821181445_20240905145522.webp" width="80%"><figcaption>
      <h4>Chilled drinks were also on the house, awesome</h4>
    </figcaption>
</figure>

<figure><img src="/images/kubecon-china-2024/20240821-istio-and-modern-api-gateways-navigating-the-future-of-service-meshes.webp" width="80%"><figcaption>
      <h4>Several bigwigs discussing the future of Istio and Gateway API</h4>
    </figcaption>
</figure>
</p>
<p>In the evening, @Mingluo took us on a tour of the Eslite bookstore in Hong Kong. The
bookstore had several floors, but there weren&rsquo;t many books that caught my interest.a</p>
<p>Afterward, we visited a bunch of electronic malls and anime merchandise stores, which was
quite an eye-opener for me.</p>
<p><figure><img src="/images/kubecon-china-2024/IMG20240821192248_20240905145522.webp" width="80%"><figcaption>
      <h4>The cover of &#39;The Child I Pushed&#39;</h4>
    </figcaption>
</figure>

<figure><img src="/images/kubecon-china-2024/IMG20240821192314_20240905145522.webp" width="80%"><figcaption>
      <h4>Another book cover</h4>
    </figcaption>
</figure>

<figure><img src="/images/kubecon-china-2024/IMG20240821201008_20240905145523.webp" width="80%"><figcaption>
      <h4>Lots of anime piano scores, including &#39;April is My Lie&#39;</h4>
    </figcaption>
</figure>

<figure><img src="/images/kubecon-china-2024/IMG20240821201059_20240905145522.webp" width="80%"><figcaption>
      <h4>Not sure where we ended up, anime merchandise everywhere</h4>
    </figcaption>
</figure>

<figure><img src="/images/kubecon-china-2024/IMG20240821202220_20240905145521.webp" width="80%"><figcaption>
      <h4>Light novel bookstore 1</h4>
    </figcaption>
</figure>

<figure><img src="/images/kubecon-china-2024/IMG20240821202237_20240905145521.webp" width="80%"><figcaption>
      <h4>Light novel bookstore 2</h4>
    </figcaption>
</figure>

<figure><img src="/images/kubecon-china-2024/IMG20240821202314_20240905145521.webp" width="80%"><figcaption>
      <h4>Light novel bookstore 3</h4>
    </figcaption>
</figure>
</p>
<p>That&rsquo;s about it for day one – a bit of tech talk, some evening exploration in Hong Kong,
and then back to rest.</p>
<h3 id="day-2" class="headerLink">
    <a href="#day-2" class="header-mark"></a>Day 2</h3><p><figure><img src="/images/kubecon-china-2024/IMG20240822102713_20240905145521.webp" width="80%"><figcaption>
      <h4>Loads of CNCF stickers, free to take, and I grabbed some for my colleagues too</h4>
    </figcaption>
</figure>

<figure><img src="/images/kubecon-china-2024/IMG20240821215634_20240905145521.webp" width="80%"><figcaption>
      <h4>My collection of CNCF stickers</h4>
    </figcaption>
</figure>
</p>
<p>The day started with a talk by Huawei, introducing the innovative solution of Kmesh. The
technical details were presented very well. If you want to check out the PPT and video,
head over to<a href="https://kccncossaidevchn2024.sched.com/event/1eYYm/revolutionizing-service-mesh-with-kernel-native-sidecarless-architecture-zhi-chang-yi-wu-jie-xin-liu-huawei-technologies-co-ltd" target="_blank" rel="noopener noreferrer">Revolutionizing Service Mesh with Kernel Native Sidecarless Architecture - Xin Liu, Huawei Technologies Co., Ltd.</a></p>
<p><figure><img src="/images/kubecon-china-2024/IMG20240822110054_20240905145521.webp" width="80%"><figcaption>
      <h4>Huawei presenting Kmesh</h4>
    </figcaption>
</figure>

<figure><img src="/images/kubecon-china-2024/IMG20240822111805_20240905145520.webp" width="80%"><figcaption>
      <h4>How Kmesh achieves hot updates without disconnecting using eBPF</h4>
    </figcaption>
</figure>
</p>
<p>I also listened to Mr. Jintao Zhang&rsquo;s talk on<a href="https://kccncossaidevchn2024.sched.com/event/1eYZg/a-decade-of-cloud-native-journey-the-evolution-of-container-technology-and-the-kubernetes-ecosystem-chang-daepjrekuberneteschang-xu-ni-zha-jintao-zhang-kong-inc" target="_blank" rel="noopener noreferrer">A Decade of Cloud Native Journey: The Evolution of Container Technology and the Kubernetes Ecosystem - Jintao Zhang, Kong Inc.</a></p>
<figure><img src="/images/kubecon-china-2024/IMG20240822162954_20240905145520.webp" width="80%"><figcaption>
      <h4>Jintao Zhang, a veteran in the industry, has been playing with Docker since early days</h4>
    </figcaption>
</figure>

<p>In the evening, we took a casual walk and explored the city, checking out the night view
by the Hong Kong seaside.</p>
<p><figure><img src="/images/kubecon-china-2024/IMG20240822213416_20240905145520.webp" width="80%"><figcaption>
      <h4>Hong Kong&#39;s night scenery, quite bustling</h4>
    </figcaption>
</figure>

<figure><img src="/images/kubecon-china-2024/IMG20240822213841_20240905145520.webp" width="80%"><figcaption>
      <h4>Bright lights and bustling crowds</h4>
    </figcaption>
</figure>

<figure><img src="/images/kubecon-china-2024/IMG20240822215218_20240905145520.webp" width="80%"><figcaption>
      <h4>Came across the Commercial Press on the way</h4>
    </figcaption>
</figure>
</p>
<h3 id="day-3" class="headerLink">
    <a href="#day-3" class="header-mark"></a>Day 3</h3><p>The highlight of the morning on the third day was the interview with Linus. Getting to see
him in person made my trip complete!</p>
<figure><img src="/images/kubecon-china-2024/IMG20240823093047_20240905145520.webp" width="80%"><figcaption>
      <h4>Linus</h4>
    </figcaption>
</figure>

<p>There weren&rsquo;t many topics that caught my interest on the third day. After Linus&rsquo;s
interview, I just wandered around, took a group photo with a few friends, and then took
the subway home.</p>
<p><figure><img src="/images/kubecon-china-2024/our-selfie.webp" width="80%"><figcaption>
      <h4>Our group selfie</h4>
    </figcaption>
</figure>

<figure><img src="/images/kubecon-china-2024/our-pc-and-shark.webp" width="80%"><figcaption>
      <h4>Our PC and Shark selfie</h4>
    </figcaption>
</figure>
</p>
<p>A friend of mine attended a TiDB talk, and the PPT looked pretty interesting, lol.</p>
<figure><img src="/images/kubecon-china-2024/20240823-tidb-your-next-mysql-is-not-a-mysql.webp" width="80%"><figcaption>
      <h4>TiDB</h4>
    </figcaption>
</figure>

<p>After three days of walking around the project exhibition hall, I scored four canvas bags,
three T-shirts, and a bunch of other small gifts. The food and drinks were more than
enough, no need to mention that. Also, I&rsquo;ve read online that the service industry in Hong
Kong has a bad attitude, but this hotel might have been of a higher star rating, and the
experience was quite good.</p>
<p>All in all, the experience was quite enjoyable, and I&rsquo;d love to come back next year if I
have the chance! Love you, KubeCon China &amp; Hong Kong!</p>]]></content><category scheme="taxonomy:Authors" term="ryan4yin" label="ryan4yin"/><category scheme="taxonomy:Categories" term="tech" label="tech"/><category scheme="taxonomy:Series" term="cloud-native-related" label="Cloud-Native Related"/><category scheme="taxonomy:Tags" term="cloud-native" label="Cloud-Native"/><category scheme="taxonomy:Tags" term="kubernetes" label="Kubernetes"/><category scheme="taxonomy:Tags" term="multicloud" label="MultiCloud"/><category scheme="taxonomy:Tags" term="service-mesh" label="Service Mesh"/><category scheme="taxonomy:Tags" term="istio" label="Istio"/></entry><entry><title type="html">OS as Code - My Experience of NixOS</title><link href="https://thiscute.world/en/posts/my-experience-of-nixos/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://thiscute.world/en/posts/nixos-and-flake-basics/?utm_source=atom_feed" rel="related" type="text/html" title="NixOS &amp; Nix Flakes - A Guide for Beginners"/><link href="https://thiscute.world/en/posts/why-i-choose-niche-products/?utm_source=atom_feed" rel="related" type="text/html" title="Why do I explore these niche technologies?"/><link href="https://thiscute.world/en/posts/2021-summary/?utm_source=atom_feed" rel="related" type="text/html" title="Summary of My 2021"/><link href="https://thiscute.world/en/now/?utm_source=atom_feed" rel="related" type="text/html" title="Now"/><link href="https://thiscute.world/en/about/?utm_source=atom_feed" rel="related" type="text/html" title="About"/><id>https://thiscute.world/en/posts/my-experience-of-nixos/</id><published>2024-02-21T16:26:21+08:00</published><updated>2024-02-21T16:26:21+08:00</updated><summary type="html">&lt;p>It&amp;rsquo;s February 2024, exactly 10 months since I started using NixOS. The beginner notes I
wrote initially have received a lot of positive feedback and some sponsorships, becoming
one of the most popular entry-level tutorials in the entire community. Since I created a
dedicated GitHub repository and a separate documentation site for it in June 2023, it has
garnered 1189 stars, and besides me, 37 other readers have submitted PRs:&lt;/p></summary><content type="html"><![CDATA[<p>It&rsquo;s February 2024, exactly 10 months since I started using NixOS. The beginner notes I
wrote initially have received a lot of positive feedback and some sponsorships, becoming
one of the most popular entry-level tutorials in the entire community. Since I created a
dedicated GitHub repository and a separate documentation site for it in June 2023, it has
garnered 1189 stars, and besides me, 37 other readers have submitted PRs:</p>
<ul>
<li><a href="https://nixos-and-flakes.thiscute.world/zh/" target="_blank" rel="noopener noreferrer">NixOS &amp; Flakes - An Unofficial Beginner&rsquo;s Guide</a></li>
</ul>
<figure><img src="/images/my-experience-of-nixos/nixos-and-flakes-book-202402.webp" width="80%"><figcaption>
      <h4>NixOS &amp; Flakes Book</h4>
    </figcaption>
</figure>

<p>From the perspective of a seasoned user who has been deeply using NixOS as a primary
desktop system for nearly 10 months, I&rsquo;d like to share my insights from a different angle
here.</p>
<p>Note that this article is not a NixOS beginner&rsquo;s tutorial; if you&rsquo;re looking for one,
please follow the link provided above.</p>
<h2 id="nixpkgs-has-too-few-packages" class="headerLink">
    <a href="#nixpkgs-has-too-few-packages" class="header-mark"></a>Nixpkgs Has Too Few Packages?</h2><p>Some people(in China) say that NixOS has too few packages, and this is one of the reasons
they don&rsquo;t use it. Is this true?</p>
<p>To clarify, NixOS boasts a substantial number of packages. The<a href="https://link.zhihu.com/?target=https%3A//repology.org/repositories/statistics/total" target="_blank" rel="noopener noreferrer">Repository statistics</a>
illustrate this as follows:</p>
<p><img class="tw-inline" loading="lazy" src=/images/my-experience-of-nixos/repository-statistics.webp   alt="Repository statistics"  ></p>
<p>The count of packages in Nixpkgs is indeed inflated by the inclusion of many programming
language libraries — it seems that quite a few Haskell developers use Nix as their
language package manager. For instance, there are<a href="https://search.nixos.org/packages?channel=unstable&amp;query=haskell" target="_blank" rel="noopener noreferrer">Haskell Packages(18000+)</a>,<a href="https://search.nixos.org/packages?channel=unstable&amp;query=rpackages" target="_blank" rel="noopener noreferrer">R Packages(27000+)</a>,
and<a href="https://search.nixos.org/packages?channel=unstable&amp;query=emacspackages" target="_blank" rel="noopener noreferrer">Emacs Packages(6000+)</a>.
However, even after subtracting these, Nixpkgs still has over 40000 packages, which,
although less than AUR, is hardly a number that corresponds to the description of &ldquo;too few
packages.&rdquo;</p>
<p>The package repository is also a point of differentiation between NixOS and Arch. Arch&rsquo;s
official repository has stringent inclusion criteria, while the AUR ecosystem is quite
vibrant. The AUR allows anyone to upload content, and although a voting mechanism serves
as a form of review, it feels rather lenient.</p>
<p>NixOS takes a different approach. Its official package repository, Nixpkgs, is very
receptive to new packages. Submitting a Pull Request to add a package or feature to
Nixpkgs is significantly simpler compared to other distributions, which is a key reason
for the large number of packages in Nixpkgs (GitHub shows that Nixpkgs has over 5000
contributors, an impressive figure).</p>
<p>The update process for the Nixpkgs repository is also more rigorous than that of AUR. PRs
generally need to pass a series of GitHub Actions, Maintainer&rsquo;s Review, and<a href="https://github.com/NixOS/ofborg" target="_blank" rel="noopener noreferrer">Ofborg</a> check and automatic build tests before being
merged. Nixpkgs encourages maintainers to add tests for their packages (the <code>doCheck</code> flag
is set to <code>true</code> by default), all of which contribute to the overall quality of the
packages.</p>
<p>NixOS also has a counterpart to AUR, the NUR (Nix User Repository), but due to the
permissive nature of Nixpkgs, NUR is not as populated.</p>
<p>For example, you can directly download and use QQ(an IM App popular in China) from the
Nixpkgs official package repository, while on Arch, you would need to use AUR or
archlinux-cn.</p>
<p>This can be seen as having its own advantages. NixOS is criticized for having too few
packages mainly because it does not follow the FHS standard, which means that most Linux
programs downloaded online cannot run directly on NixOS. Of course, there are solutions to
this. I suggest first checking if there is already a package for the desired software in
Nixpkgs, and if so, use it directly. If not, try some community solutions or package it
yourself.</p>
<p>Packaging programs is inevitable when using NixOS, as even though Nixpkgs already has a
vast number of packages, it&rsquo;s impossible for it to match all your needs 100% of the time.
There will always be packages you want to use but can&rsquo;t find in Nixpkgs or NUR, and on
NixOS, you often have to write a packaging script for your packages to run normally on the
system.</p>
<p>OK, enough chatter. Let&rsquo;s move on to the main topic.</p>
<p>Firstly, NixOS is much more complex than traditional distributions and has a lot of
historical issues.</p>
<p>For example, the official documentation is so bad that it forced me, a beginner at NixOS,
to write my own beginner&rsquo;s notes while I was learning. After translating my notes into
poor English and posting them on reddit
(<a href="https://www.reddit.com/r/NixOS/comments/13dxw9d/nixos_nix_flakes_a_guide_for_beginners/" target="_blank" rel="noopener noreferrer">NixOS &amp; Nix Flakes - A Guide for Beginners</a>),
they received a lot of positive feedback from foreigners (after so much continuous
iteration, it has now become one of the most popular beginner tutorials in the community),
which also shows how bad the official documentation is.</p>
<h2 id="is-nixos-worth-learning" class="headerLink">
    <a href="#is-nixos-worth-learning" class="header-mark"></a>Is NixOS Worth Learning?</h2><p><strong>Is NixOS worth learning, or is the return on investment high enough? In my view, it all
comes down to scale.</strong></p>
<p><strong>Here, &ldquo;scale&rdquo; refers to three aspects:</strong></p>
<ol>
<li><strong>The scale of your custom content for the Linux system:</strong> The more customization you
do, the harder it is to migrate to a new version.</li>
<li><strong>The frequency of system updates:</strong> The more frequently you update your system, the
higher the risk of encountering issues.</li>
<li><strong>The number of your Linux machines:</strong> The more machines you have, the more you benefit
from a system that can easily replicate the same environment.</li>
</ol>
<p>Let me share my experience with traditional distributions like Arch and Ubuntu, and why I
chose NixOS, and the changes it brought me, from a personal perspective.</p>
<p>For example, when I used Deepin, Ubuntu and other traditional distros in the past, I
didn&rsquo;t customize the system much for fear of causing problems and not being able to fix
them easily. Moreover, any customizations I made were black boxes and not migratable. A
month later, I would have forgotten everything, and the system would have become
increasingly chaotic and opaque over time.</p>
<p>If you&rsquo;re using a rolling release distribution like Arch, the issues you encounter are
generally minor. But with Ubuntu or Deepin, it&rsquo;s rare for in-place upgrades to go
smoothly, which means I had to re-customize everything on the new Ubuntu version. Worse
yet, I might have forgotten what I did in the past, meaning I had to spend more time
researching my system environment and how everything was installed and configured. This
repetitive labor is very painful.</p>
<p>Clearly, the more complex and customized the system, the harder it is to migrate to a new
version.</p>
<p>I think this is why rolling release distributions like Arch, Gentoo, and Fedora are so
popular among Linux enthusiasts. Linux users who like to customize their systems mostly
use these types of distributions.</p>
<p>So can Arch or Fedora solve the problems completely? Obviously not.</p>
<p>Firstly, they have a higher update frequency, which means you&rsquo;re more likely to break
something on your system. Of course, this is a small problem, as most Linux users now use
btrfs or zfs file system snapshots for rollback in case of issues.</p>
<p>Their fundamental problems, however, is:</p>
<ol>
<li>Your Arch system environment, file system snapshots, or virtual machine snapshots are
still black boxes. They will become increasingly chaotic with continuous use and do not
include the &ldquo;knowledge&rdquo; of how to build this environment from scratch, making them<strong>unexplainable.</strong>
<ul>
<li>In my work, I&rsquo;ve seen some &ldquo;<strong>ancestral virtual machine snapshots</strong>&rdquo; or &ldquo;<strong>ancestral
cloud server snapshots</strong>&rdquo; where no one knows how the environment was set up, and each
new person who takes over can only continue to pile on buffs, then pass the time bomb
to the next person. This is like the game where people take turns adding water to a
cup, and whoever adds water when it overflows is out of luck.</li>
</ul>
</li>
<li>Arch essentially requires you to follow its updates continuously, which means you must
continuously maintain it.
<ul>
<li>If you let a machine run stable for a year and then decide to update it, the risk of
problems is quite high. If you then decide to set up a new Arch machine and restore
the old environment, you&rsquo;re back to the same problem — you have to figure out how to
restore your customization process from the old environment, which is also not a
pleasant task.</li>
</ul>
</li>
<li>Snapshots are strongly associated with the current hardware environment and are easily
affected by various strange issues when used directly on different hardware machines,
making them <strong>unmovable.</strong></li>
<li>Snapshots are large binary files, making them expensive to back up and share.</li>
</ol>
<p>Docker can solve some of these problems. Firstly, Docker container images can be fully
described by Dockerfiles, meaning they are <strong>explainable</strong>, and the same environment can
be replicated in different environments. This indicates that they are <strong>movable.</strong></p>
<p>For server environments, running all applications in containers, with the host machine
only responsible for running containers, greatly reduces the cost of system maintenance by
only requiring you to maintain the most basic system environment and some Dockerfiles and
yaml files and is thus the preferred choice for DevOps.</p>
<p>However, Docker container technology is designed for providing a consistent runtime
environment for applications and is not suitable for virtual machine and desktop
environments (of course, you can use it in these scenarios if you wish, but it would be
quite complicated). Additionally, Dockerfiles still rely on various scripts and commands
you write to build the image, which you need to maintain, and the reproducibility of the
results depends on your own skills.</p>
<p>If you choose a minimalist strategy - customizing as little as possible on any desktop
system or virtual machine environment and using default settings wherever possible, this
was me before switching to NixOS.</p>
<p>To reduce the difficulty of system maintenance, I barely made any significant changes to
the systems I used, such as Deepin, Manjaro, EndeavourOS, etc. As an SRE/DevOps, I had
already encountered enough environmental problem pitfalls in my work and was tired of
writing various installation scripts and Ansible configurations, so I had no desire to
deal with these issues in my spare time.</p>
<p>However, if you are a geek who likes to customize and delve into the details of the
system, as you make more and more customizations and the system becomes more complex, or
if you have more and more Linux machines in your Homelab and cloud environment, you will
definitely start to write various deployment flow documents, deployment scripts, or use
some automation tools to help yourself complete some tedious work at some point.</p>
<p>Documentation aside, it&rsquo;s obvious that writing automation scripts or choosing automation
tools will lead to increasingly complex configurations, and system updates often break
some of these functions, requiring you to fix them manually. Moreover, they are highly
dependent on your current system environment, so when you confidently use them to deploy
environments on new machines, you are very likely to encounter various inconsistent
environment-related errors that need to be resolved manually. Another point is that the
scripts you write are likely not to have carefully considered abstraction, modularization,
error handling, and other aspects, which will also make it increasingly painful to
maintain them as the scale expands.</p>
<p>Then you discover NixOS, and you realize that its declarative configuration essentially
wraps a pile of bash scripts and provides users with a set of clean and simple APIs. The
actual work it does is exactly the same as the pile of scripts you&rsquo;ve been writing for
years.</p>
<p>You try it out and find that the system customization scripts in NixOS are all stored in a
repository called Nixpkgs, maintained by thousands of people, with decades of
accumulation, and with a very rich and relatively stable declarative abstraction, module
system, type system, a large-scale CI system called Hydra specifically developed for this
huge software package repository and NixOS system configuration, and a community operation
mode that has formed to facilitate collaboration and updating this complex configuration
for thousands of people.</p>
<p>You immediately start learning Nix and begin to rewrite the scripts you&rsquo;ve maintained for
N years into NixOS configurations.</p>
<p>The more you write, the more satisfied you become, as the reduced configuration is much
easier to maintain.</p>
<p>A large part of the functionality previously achieved with various scripts and tools is
now encapsulated in Nixpkgs, and you can enable it and pass a few key parameters to run it
painlessly. The scripts in Nixpkgs have dedicated maintainers who update and fix any
issues found by users, and any updates that haven&rsquo;t undergone CI and multiple stages of
testing and validation, such as staging and unstable, won&rsquo;t enter the stable channel.</p>
<p>The &ldquo;you&rdquo; I mentioned earlier is none other than myself.</p>
<p>Now, when I think back to the days when I struggled with systemd to run a simple little
tool, I can&rsquo;t help but shed tears&hellip; If only I had known about NixOS earlier&hellip;</p>
<h2 id="the-declarative-configuration-of-nixos---os-as-code" class="headerLink">
    <a href="#the-declarative-configuration-of-nixos---os-as-code" class="header-mark"></a>The Declarative Configuration of NixOS - OS as Code</h2><p>People with some programming experience should know the importance of abstraction and
modularization, as the complexity of a scenario increases, the benefits of abstraction and
modularization also increase. The popularity of Terraform, Kubernetes, and even Spring
Boot, reflects this. NixOS&rsquo;s declarative configuration is also like this, as it
encapsulates the underlying implementation details and has a community responsible for
updating and maintaining these lower-level encapsulations. This greatly reduces my
cognitive load and frees up my productivity. Its reproducibility also alleviates my
concerns about breaking the system.</p>
<p>NixOS is built on top of Nix, a functional package manager, drawing its design philosophy
from Eelco Dolstra&rsquo;s paper <a href="https://edolstra.github.io/pubs/phd-thesis.pdf" target="_blank" rel="noopener noreferrer">The Purely Functional Software Deployment Model</a>. &ldquo;Purely
functional&rdquo; means it has no side effects, much like a mathematical function $y = f(x)$,
where the same NixOS configuration file (input parameter $x$) always yields the same NixOS
system environment (output $y$).</p>
<p>This means that <strong>NixOS&rsquo;s configuration declares the entire system&rsquo;s state, OS as Code</strong>!</p>
<p>As long as you have the source code of your NixOS system and it hasn&rsquo;t been lost,
modifying it, reviewing it, sharing the source code with others, or borrowing features
from someone else&rsquo;s source code is quite straightforward.</p>
<p>You can easily copy other NixOS users&rsquo; system configurations to ensure you&rsquo;ll get the same
environment. In contrast, copying configurations from users of traditional distributions
like Arch or Ubuntu is much more cumbersome, considering the various version differences
and environmental peculiarities, leading to a high level of uncertainty.</p>
<h2 id="the-learning-curve-of-nixos" class="headerLink">
    <a href="#the-learning-curve-of-nixos" class="header-mark"></a>The Learning Curve of NixOS</h2><p>The entry barrier of NixOS is relatively high and is not suitable for beginners who have
never touched Linux and programming. This is because its design philosophy is quite
different from traditional Linux distributions. However, this is also its advantage, as
once you cross that threshold, you will find a whole new world.</p>
<p>For example, <strong>reading the source code of Nixpkgs and submitting PRs to add features， add
packages or fix bugs is a basic skill for NixOS users</strong>, and <strong>NixOS users who do this are
quite common</strong>. <strong>This is both a deterrent that scares away new users and a ladder for
Linux users who have chosen NixOS</strong>.</p>
<p>Imagine that most Arch users (like me in the past) might have used Arch for several years
but didn&rsquo;t understand the underlying implementation details of Arch, nor did they package
their own software. But with NixOS, diving into the source code becomes a norm, which also
shows that understanding its implementation details is not difficult.</p>
<p>I will illustrate this point from two aspects.</p>
<p>First, Nix is a relatively simple language with very few syntax rules, <strong>far simpler than
general-purpose languages like Java or Python</strong>. Therefore, engineers with some
programming experience can master its syntax in just a few hours. With a bit more time,
reading common Nix code shouldn&rsquo;t be too difficult.</p>
<p>Second, <strong>NixOS&rsquo;s good declarative abstraction and modularization system divide the OS
into many layers</strong>, allowing users to focus only on the current layer of abstraction while
still having the option to dive deeper into the next layer to more freely implement the
desired functions (The right to choose, in fact, also gives users the opportunity to
understand NixOS progressively.). For example, new users can normally use NixOS just by
understanding the top-level abstraction. When you want to implement some customizations,
digging one level deeper into the abstraction (such as customizing some operations
directly through systemd&rsquo;s declarative parameters) is usually enough. If you are already a
seasoned NixOS user and want to be more geeky, you can continue to delve deeper.</p>
<p>In summary, understanding the source code in Nixpkgs or using Nix to package a few
programs is not difficult, and each NixOS user with some experience can also be a NixOS
packager.</p>
<h2 id="what-sets-nixos-apart" class="headerLink">
    <a href="#what-sets-nixos-apart" class="header-mark"></a>What Sets NixOS Apart?</h2><p>We&rsquo;ve heard a lot about NixOS&rsquo;s strengths, and I&rsquo;ve mentioned many of them above.</p>
<p>People outside the Nix community might mainly hear about its dependency-conflicts-free,
the ability to roll back at any time, and its powerful reproducibility.</p>
<p>If you have actually used NixOS, you should also know about its other advantages:</p>
<ol>
<li>
<p>NixOS&rsquo;s flakes feature allows you to lock the system to a specific state, and you can
update it when you want to, even if it spans a year or two. NixOS does not force you to
update your system frequently, you can choose to do this or not at all. Because the
state of the system can be completely inferred from your NixOS configuration, it&rsquo;s much
easier to upgrade from a old version to the latest one.</p>
<ol>
<li>It&rsquo;s always good to have a choice, I don&rsquo;t like being forced, and neither do
sysadmins or DevOps in companies.</li>
</ol>
</li>
<li>
<p>System updates have similar atomic properties to database transactions, which means
your system updates either succeed or fail (usually without intermediate states).</p>
</li>
<li>
<p>NixOS&rsquo;s declarative configuration actually implements OS as Code, making these
configurations very easy to share. You can simply copy the code for the desired
functionality from other NixOS users into your system configuration, and you&rsquo;ll get an
identical environment. Beginner users can also easily learn a lot from others'
configurations.</p>
<ol>
<li>This is also why more and more users are using NixOS for Linux desktop ricing on
GitHub and reddit r/unixporn in recent years.</li>
</ol>
</li>
<li>
<p>The declarative configuration provides users with highly convenient system
customization capabilities, allowing them to quickly switch various components of the
system by changing a few lines of configuration.</p>
</li>
<li>
<p>And so on.</p>
</li>
</ol>
<p>These are all selling points of NixOS, some of which can now also be achieved by
traditional distributions with innovations like Fedora Silverblue.</p>
<p>However, the system that can solve all these problems right now is only NixOS (and the
more niche Guix. According to<a href="https://git.savannah.gnu.org/cgit/guix.git/tree/README#n69" target="_blank" rel="noopener noreferrer">Guix&rsquo;s README</a>, it&rsquo;s also
based on the Nix package manager).</p>
<h2 id="nixos-disadvantages" class="headerLink">
    <a href="#nixos-disadvantages" class="header-mark"></a>NixOS&rsquo;s Disadvantages and Historical Debts</h2><p>For over two decades since the creation of the NixOS project, Nix package manager and the
NixOS operating system have been very niche technologies, especially in China, where only
a few Linux enthusiasts are aware of their existence, let alone using them.</p>
<p>NixOS is very special and powerful, but on the other hand, it has a considerable amount of
historical debt, such as:</p>
<ol>
<li>Poorly organized and impenetrable documentation</li>
<li>The Flakes feature, which truly enables NixOS to meet its claimed reproducibility, is
still in an experimental state from its official release in 2021(Nix 2.4) to 2024 now..</li>
<li>The Nix CLI is in a transition period, and the new version is much more elegant, but
its implementation is strongly bound to the Flakes feature, making both difficult to
stabilize and even hindering the development of many other features.</li>
<li>Defects in the module system and insufficient error handling in Nix have led to
long-term cryptic error messages, driving users crazy.</li>
<li>The Nix language&rsquo;s simplicity has resulted in a large number of Bash scripts being used
in Nixpkgs, and most of Nix&rsquo;s features are implemented in C++, making it a black box
from the perspective of Nix.</li>
<li>Many implementation details of NixOS are hidden in the Nixpkgs source code, such as the
classification of software packages and what attributes can be overridden in
derivations.
<ul>
<li>Nixpkgs has long used folders to classify software packages, and there is no way to
query the software packages by category except through the source code.</li>
<li>All derivation-related information in Nixpkgs can currently only be obtained by
looking at the source code.</li>
</ul>
</li>
<li>The maintainer of the <a href="https://nixos.wiki" target="_blank" rel="noopener noreferrer">https://nixos.wiki</a> site has left, and the official has long
failed to provide an alternative, making NixOS&rsquo;s documentation even worse than it
already was.</li>
<li>The recent rapid growth of Nix/NixOS&rsquo;s user base has posed challenges to its community
operation model.</li>
<li>&hellip;</li>
</ol>
<p>These historical debts are the main reasons why NixOS has not been more widely used. But
these issues are also opportunities for NixOS&rsquo;s future, as the community is actively
working to solve them. I am looking forward to seeing how NixOS will develop once these
issues are resolved.</p>
<h2 id="the-future-of-nixos" class="headerLink">
    <a href="#the-future-of-nixos" class="header-mark"></a>The Future of NixOS</h2><p>No one is interested in a technology that has no future, so what about the future of
NixOS? Am I optimistic about it? Here, I try to illustrate my views on the future of NixOS
using some data.</p>
<p>First, let&rsquo;s look at the Nixpkgs project, which stores all the software packages for NixOS
and the implementation code for NixOS itself:</p>
<p><a href="https://github.com/NixOS/nixpkgs/graphs/contributors" target="_blank" rel="noopener noreferrer"><img class="tw-inline" loading="lazy" src=/images/my-experience-of-nixos/nixpkgs-contributors.webp     ></a></p>
<p>The graph shows that the activity of the Nixpkgs project has been continuously increasing
since 2021. Among the Top 6 contributors, three began contributing code in large
quantities after 2021. If you look at GitHub, you&rsquo;ll see that five out of the Top 10
contributors joined the community after 2021, including seasoned NixOS-CN members @NickCao
and @figsoda.</p>
<p>Now let&rsquo;s look at the commit history of the Nix package manager, which is the underlying
technology of NixOS:</p>
<p><a href="https://github.com/NixOS/nixpkgs/graphs/contributors" target="_blank" rel="noopener noreferrer"><img class="tw-inline" loading="lazy" src=/images/my-experience-of-nixos/nix-contributors.webp     ></a></p>
<p>The graph shows a significant increase in activity in the Nix project in 2020, five of the
top 6 contributors beginning to contribute code in large quantities after 2020.</p>
<p>Next, let&rsquo;s look at the Google Trends for the keyword &ldquo;NixOS&rdquo;:</p>
<p><a href="https://trends.google.com/trends/explore?cat=5&amp;date=2014-01-23%202024-02-23&amp;q=NixOS" target="_blank" rel="noopener noreferrer"><img class="tw-inline" loading="lazy" src=/images/my-experience-of-nixos/nixos-google-trends.webp     ></a></p>
<p>This graph shows several obvious upticks in the search trending for NixOS:</p>
<ol>
<li>In December 2021
<ul>
<li>This is likely due to the release of Nix 2.4 in November 2021, which brought
experimental Flakes features and a new CLI. Flakes greatly improves the
reproducibility of NixOS,and the new CLI is more in line with user intuition.</li>
</ul>
</li>
<li>In June 2023
<ul>
<li>The most important reason should be that several popular Linux-related channels on
YouTube launched several videos about NixOS around this time. As of 2024-02-23, the
three NixOS-related videos with the highest views on YouTube were all released
between June and July 2023, with a total view count exceeding 1.3 million.<img class="tw-inline" loading="lazy" src=/images/my-experience-of-nixos/nixos-youtube-videos.webp     ></li>
<li>Interest in China peaked recently, which may be because the user base in China has
always been small. Then in June, I released<a href="https://nixos-and-flakes.thiscute.world/zh/" target="_blank" rel="noopener noreferrer">NixOS and Flakes - An Unofficial Beginner&rsquo;s Guide</a>,
and I did some promotion through channels like<a href="https://github.com/ruanyf/weekly/issues/3315" target="_blank" rel="noopener noreferrer">Technology Lover&rsquo;s Weekly</a>, leading to
a significant increase in the relative index of NixOS.</li>
</ul>
</li>
<li>In January 2024
<ul>
<li>I&rsquo;m not sure of the reason for this yet.</li>
</ul>
</li>
</ol>
<p>Now let&rsquo;s look at the annual user survey started by the Nix/NixOS community in 2022.</p>
<ol>
<li><a href="https://discourse.nixos.org/t/2022-nix-survey-results/18983" target="_blank" rel="noopener noreferrer">2022 Nix Survey Results</a>,
based on the data:
<ul>
<li>74.5% of users began using Nix/NixOS within the last three years.</li>
<li>In the survey about extending Nixpkgs, 36.7% of users use Flakes to extend Nixpkgs,
second only to traditional overlays.</li>
</ul>
</li>
<li><a href="https://discourse.nixos.org/t/nix-community-survey-2023-results/33124" target="_blank" rel="noopener noreferrer">Nix Community Survey 2023 Results</a>,
a simple calculation reveals:
<ul>
<li>54.1% of users began using Nix/NixOS within the last three years.</li>
<li>In the survey about extending Nixpkgs, the percentage of users using Flakes reached
49.2%, surpassing traditional Overlays.</li>
<li>In the survey about experimental features, the percentage of users using Flakes
reached 59.1%.</li>
</ul>
</li>
</ol>
<p>Additionally, GitHub&rsquo;s<a href="https://github.blog/2023-11-08-the-state-of-open-source-and-ai/" target="_blank" rel="noopener noreferrer">Octoverse 2023</a> report
also mentioned Nixpkgs:</p>
<blockquote>
  <p>Developers see benefits to combining packages and containerization. As we noted earlier,
4.3 million repositories used Docker in 2023. <strong>On the other side of the coin, Linux
distribution NixOS/nixpkgs has been on the top list of open source projects by
contributor for the last two years</strong>.</p>

</blockquote><p>These data points align with the increased activity in the Nixpkgs and Nix projects and
show that the Nix/NixOS community began growing rapidly after 2021.</p>
<p>Considering all these data points, I am very optimistic about the future of NixOS.</p>
<h2 id="conclusion" class="headerLink">
    <a href="#conclusion" class="header-mark"></a>Conclusion</h2><p>From deciding to dive into NixOS to now, just 10 months later, the gains I&rsquo;ve made on
Linux far exceed those of the past three years. I have tried a lot of new technologies and
tools on my PC, and my Homelab has become much richer (I now have more than ten NixOS
hosts). My understanding of the Linux system structure has also deepened.</p>
<p>These few points alone are enough to justify the choice, welcome to the world of NixOS!</p>
]]></content><category scheme="taxonomy:Authors" term="ryan4yin" label="ryan4yin"/><category scheme="taxonomy:Categories" term="tech" label="tech"/><category scheme="taxonomy:Series" term="nixos-nix-flakes" label="NixOS &amp; Nix Flakes"/><category scheme="taxonomy:Tags" term="nixos" label="NixOS"/><category scheme="taxonomy:Tags" term="nix" label="Nix"/><category scheme="taxonomy:Tags" term="flakes" label="Flakes"/><category scheme="taxonomy:Tags" term="linux" label="Linux"/><category scheme="taxonomy:Tags" term="devops" label="DevOps"/></entry><entry><title type="html">Why do I explore these niche technologies?</title><link href="https://thiscute.world/en/posts/why-i-choose-niche-products/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://thiscute.world/en/posts/nixos-and-flake-basics/?utm_source=atom_feed" rel="related" type="text/html" title="NixOS &amp; Nix Flakes - A Guide for Beginners"/><link href="https://thiscute.world/en/posts/2021-summary/?utm_source=atom_feed" rel="related" type="text/html" title="Summary of My 2021"/><link href="https://thiscute.world/en/now/?utm_source=atom_feed" rel="related" type="text/html" title="Now"/><link href="https://thiscute.world/en/about/?utm_source=atom_feed" rel="related" type="text/html" title="About"/><link href="https://thiscute.world/en/posts/the-end-of-another-semester/?utm_source=atom_feed" rel="related" type="text/html" title="The End of Another Semester"/><id>https://thiscute.world/en/posts/why-i-choose-niche-products/</id><published>2023-08-01T11:40:57+08:00</published><updated>2023-08-01T11:40:57+08:00</updated><summary type="html">&lt;p>I have dabbled with many niche technologies, and this year, the main ones I explored are
NixOS, window manager i3/hyprland, and Neovim. NixOS, in particular, took me to a whole
new level - I even created an open-source bilingual book&lt;a href="https://github.com/ryan4yin/nixos-and-flakes-book" target="_blank" rel="noopener noreferrer">nixos-and-flakes-book&lt;/a> to help
beginners get started. Additionally, I worked on several NixOS-related open-source
projects like &lt;a href="https://github.com/ryan4yin/nix-darwin-kickstarter" target="_blank" rel="noopener noreferrer">nix-darwin-kickstarter&lt;/a>
and &lt;a href="https://github.com/ryan4yin/nix-config" target="_blank" rel="noopener noreferrer">ryan4yin/nix-config&lt;/a>, which all received
positive feedback.&lt;/p>
&lt;p>Based on my experiences with these niche technologies and the frequent questions I receive
(e.g., why did I choose &lt;a href="nixos.org/" rel="">NixOS&lt;/a> / &lt;a href="https://github.com/Neovim/Neovim" target="_blank" rel="noopener noreferrer">Neovim&lt;/a> /&lt;a href="https://flypy.com/" target="_blank" rel="noopener noreferrer">Flypy Chinese Input Method&lt;/a>? What are their advantages? Can they
really improve productivity?), I would like to briefly share my thoughts on them.&lt;/p></summary><content type="html"><![CDATA[<p>I have dabbled with many niche technologies, and this year, the main ones I explored are
NixOS, window manager i3/hyprland, and Neovim. NixOS, in particular, took me to a whole
new level - I even created an open-source bilingual book<a href="https://github.com/ryan4yin/nixos-and-flakes-book" target="_blank" rel="noopener noreferrer">nixos-and-flakes-book</a> to help
beginners get started. Additionally, I worked on several NixOS-related open-source
projects like <a href="https://github.com/ryan4yin/nix-darwin-kickstarter" target="_blank" rel="noopener noreferrer">nix-darwin-kickstarter</a>
and <a href="https://github.com/ryan4yin/nix-config" target="_blank" rel="noopener noreferrer">ryan4yin/nix-config</a>, which all received
positive feedback.</p>
<p>Based on my experiences with these niche technologies and the frequent questions I receive
(e.g., why did I choose <a href="nixos.org/" rel="">NixOS</a> / <a href="https://github.com/Neovim/Neovim" target="_blank" rel="noopener noreferrer">Neovim</a> /<a href="https://flypy.com/" target="_blank" rel="noopener noreferrer">Flypy Chinese Input Method</a>? What are their advantages? Can they
really improve productivity?), I would like to briefly share my thoughts on them.</p>
<h2 id="what-are-niche-technologies" class="headerLink">
    <a href="#what-are-niche-technologies" class="header-mark"></a>What are niche technologies?</h2><p>&ldquo;Niche&rdquo; refers to being different from the mainstream. Niche technologies are those with a
relatively smaller user base within their respective domains.</p>
<p>According to this definition, I can list some niche technologies I have encountered in
different fields:</p>

<div class="table-wrapper">
  <table>
    <thead>
        <tr>
            <th style="text-align: ">Domain</th>
            <th style="text-align: ">Niche Technologies</th>
            <th style="text-align: ">Mainstream Technologies</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td style="text-align: ">Text Editors</td>
            <td style="text-align: ">Neovim, Emacs</td>
            <td style="text-align: ">VSCode, Pycharm, IDEA</td>
        </tr>
        <tr>
            <td style="text-align: ">Keyboard Layout</td>
            <td style="text-align: ">Dvorak</td>
            <td style="text-align: ">QWERTY</td>
        </tr>
        <tr>
            <td style="text-align: ">Linux Distros</td>
            <td style="text-align: ">NixOS, Gentoo, Arch Linux</td>
            <td style="text-align: ">Ubuntu, Fedora</td>
        </tr>
        <tr>
            <td style="text-align: ">Window Managers</td>
            <td style="text-align: ">i3, hyprland</td>
            <td style="text-align: ">KDE, GNOME</td>
        </tr>
    </tbody>
  </table>
</div>
<p>Most people tend to choose mainstream technologies in these fields due to their lower
learning curve and ease of use. I was once part of the majority, but I gradually
discovered the advantages of niche technologies, which led me to try and eventually
transition to them.</p>
<h2 id="what-are-the-characteristics-of-these-niche-technologies" class="headerLink">
    <a href="#what-are-the-characteristics-of-these-niche-technologies" class="header-mark"></a>What are the characteristics of these niche technologies?</h2><p>Niche technologies obviously have some advantages to attract a portion of users and make
them choose these technologies over mainstream ones.</p>
<p>Based on my personal experience with these niche technologies, they share some notable
common characteristics.</p>
<p>Firstly, they have a common downside: <strong>higher learning curve and more time required to
get familiar with them during the initial stages</strong>.</p>
<p>This filters out the majority of users, and only those who enjoy tinkering and embracing
challenges will be willing to explore these niche technologies.</p>
<p>For instance, with the Dvorak keyboard layout, the learning curve is steep, requiring a
significant amount of time to memorize the key arrangement and practice, leading to a
challenging input experience in the early stages. To achieve the typing speed you had with
the QWERTY keyboard layout, you might need to practice Dvorak for at least an hour a day
consistently for a month.</p>
<p>Now, let&rsquo;s discuss their common advantages:</p>
<ol>
<li><strong>High customizability</strong>: Users can freely customize various functions according to
their needs.</li>
<li><strong>Strong sense of control and excellent user experience</strong>: The high level of
customization gives users a sense of complete control while using these technologies,
resulting in an excellent user experience.</li>
<li><strong>High user retention and active communities</strong>: Users continuously explore, learn, and
customize these technologies, creating a strong sense of belonging within the
communities.</li>
</ol>
<p>Due to these reasons, once users successfully familiarize themselves with a niche
technology (e.g., dvorak keyboard layout, Neovim/Emacs editors), it becomes challenging
for them to revert to the previous mainstream solutions. They will find the previous
solutions less convenient and enjoyable.</p>
<h2 id="why-do-i-explore-these-niche-technologies" class="headerLink">
    <a href="#why-do-i-explore-these-niche-technologies" class="header-mark"></a>Why do I explore these niche technologies?</h2><p>I have explored various niche technologies, and curiosity is the primary reason. However,
what makes me stick with them is their excellent user experience.</p>
<p>For instance, with Neovim editor and Hyprland window manager, once configured, they are
aesthetically pleasing! Moreover, Neovim is exceptionally fast, even too fast! This speed
may not impress those VSCode / IDEA users who haven&rsquo;t experienced Neovim before, but once
you get used to it, you&rsquo;ll find the speed truly impressive, just like the character Tu
Hengyu exclaims in the The Wandering Earth 2 (550W is too fast! This speed is too fast!).</p>
<p>Additionally, after mastering these technologies, I find them enjoyable to use. The
keyboard-driven interaction provides a sense of control and smoothness(elegant, so
elegant!).</p>
<p><figure><img src="/images/why-i-choose-niche-products/hyprland_2023-07-29_1.webp" width="85%"><figcaption>
      <h4>My NixOS &#43; Hyprland Desktop</h4>
    </figcaption>
</figure>

<figure><img src="/images/why-i-choose-niche-products/hyprland_2023-07-29_2.webp" width="85%"><figcaption>
      <h4>My Neovim Editor</h4>
    </figcaption>
</figure>
</p>
<p>Similarly, my love for NixOS is based on similar reasons. NixOS with its declarative,
reproducible (consistent runtime environment), OS as Code features aligns perfectly with
what an Site Reliablility Engineer like me desires. I couldn&rsquo;t wait to use it and even
wanted to improve it promptly to make it suitable for more scenarios.</p>
<blockquote>
  <p>A few days ago, I saw a comment from a foreign netizen on 4chan (although the language
was a bit extreme, I still somewhat agreed&hellip;): Completely and utterly unacceptable.
Imagine having a tool that can&rsquo;t even properly undo an operation and then relying on it
to manage an operating system. <code>apt</code>, <code>pip</code>, <code>pm</code>, <code>rpm</code>, <code>pacman</code>, whatever are all a
mad fucking joke.</p>

</blockquote><h2 id="can-niche-tools-or-technologies-improve-productivity" class="headerLink">
    <a href="#can-niche-tools-or-technologies-improve-productivity" class="header-mark"></a>Can niche tools or technologies improve productivity?</h2><p>Many people claim that niche tools like Neovim editor, i3 window manager, can boost
productivity, but I believe it is a misconception. In fact, many of these tools or
technologies can be time-consuming distractions, driven by one&rsquo;s interests to continuously
explore their boundaries and adjust configurations to better suit individual needs. During
the initial phase, the time invested in these endeavors often outweighs the saved time
from increased productivity.</p>
<p>So, ultimately, trying to use these technologies to significantly boost productivity is
not realistic. They can improve your efficiency, but to a limited extent, unless your
typing speed is the limiting factor in your productivity, emmm&hellip;</p>
<p>Or some may argue that once you become completely proficient, vim/emacs makes it easier to
enter a state of flow? That is also difficult to say.</p>
<h2 id="so-what-are-the-benefits-of-tinkering-with-these-things" class="headerLink">
    <a href="#so-what-are-the-benefits-of-tinkering-with-these-things" class="header-mark"></a>So, what are the benefits of tinkering with these things?</h2><p>If we look at it from a purely pragmatic perspective, there may not be many benefits; it&rsquo;s
like playing games, just spending leisure time.</p>
<figure><img src="/images/why-i-choose-niche-products/useless-work.jpg" width="35%"><figcaption>
      <h4>Why do you always delve into these things that are useless for the business? (teasing tone)</h4>
    </figcaption>
</figure>

<p>However, compared to doing something boring for leisure, there are some useful takeaways.
For instance, when I encounter a bug in AstroNvim , I provide a PR to the upstream
repository. When I find that NixOS documentation is inadequate, I write my own
documentation and share it. If I notice that NixOS lacks support for a SBC I have, I might
try to port it. And if I find that a certain tool lacks a feature I want, I might just
write one myself.</p>
<p>The experiences gained, open-source projects created, PRs left in upstream repositories,
and the appreciation received in the community all feel valuable. It may not necessarily
have business value, but it&rsquo;s fun, and you get to make friends, help others, and leave
your mark in the open-source community - isn&rsquo;t that interesting?</p>
<p>Linus, when he first created Linux, did it<a href="https://www.goodreads.com/book/show/160171.Just_for_Fun" target="_blank" rel="noopener noreferrer">just for fun</a>.</p>
<h2 id="conclusion" class="headerLink">
    <a href="#conclusion" class="header-mark"></a>Conclusion</h2><p>You can&rsquo;t connect the dots looking forward; you can only connect them looking backward. So
you have to trust that the dots will somehow connect in your future. You have to trust in
something — your gut, destiny, life, karma, whatever. This approach has never let me down,
and it has made all the difference in my life.</p>
<p>Stay Hungry. Stay Foolish.</p>
<p>——<a href="https://news.stanford.edu/2005/06/12/youve-got-find-love-jobs-says/" target="_blank" rel="noopener noreferrer">You’ve got to find what you love, by Steve Jobs, CEO of Apple Computer</a></p>
]]></content><category scheme="taxonomy:Authors" term="ryan4yin" label="ryan4yin"/><category scheme="taxonomy:Categories" term="tech" label="tech"/><category scheme="taxonomy:Categories" term="life" label="life"/><category scheme="taxonomy:Tags" term="vim" label="Vim"/><category scheme="taxonomy:Tags" term="neovim" label="Neovim"/><category scheme="taxonomy:Tags" term="vscode" label="VSCode"/><category scheme="taxonomy:Tags" term="editor" label="Editor"/><category scheme="taxonomy:Tags" term="ide" label="IDE"/><category scheme="taxonomy:Tags" term="linux" label="Linux"/><category scheme="taxonomy:Tags" term="%E4%B8%AD%E6%96%87%E8%BE%93%E5%85%A5%E6%B3%95" label="中文输入法"/></entry><entry><title type="html">NixOS &amp; Nix Flakes - A Guide for Beginners</title><link href="https://thiscute.world/en/posts/nixos-and-flake-basics/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://thiscute.world/en/posts/2021-summary/?utm_source=atom_feed" rel="related" type="text/html" title="Summary of My 2021"/><link href="https://thiscute.world/en/now/?utm_source=atom_feed" rel="related" type="text/html" title="Now"/><link href="https://thiscute.world/en/about/?utm_source=atom_feed" rel="related" type="text/html" title="About"/><link href="https://thiscute.world/en/posts/the-end-of-another-semester/?utm_source=atom_feed" rel="related" type="text/html" title="The End of Another Semester"/><id>https://thiscute.world/en/posts/nixos-and-flake-basics/</id><published>2023-05-10T21:23:28+08:00</published><updated>2023-06-22T02:50:00+08:00</updated><summary type="html">&lt;p>Since the article is so long now, for the convenience of readers, the content of this post
has been moved to a separate site:&lt;/p>
&lt;ul>
&lt;li>Document Site: &lt;a href="https://nixos-and-flakes.thiscute.world/" target="_blank" rel="noopener noreferrer">https://nixos-and-flakes.thiscute.world/&lt;/a>&lt;/li>
&lt;li>GitHub Repo: &lt;a href="https://github.com/ryan4yin/nixos-and-flakes-book" target="_blank" rel="noopener noreferrer">https://github.com/ryan4yin/nixos-and-flakes-book&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Thanks for the feedback, criticism, suggestions from&lt;a href="https://www.reddit.com/r/NixOS/comments/14fvz1q/comment/jp4xhj3/?context=3" target="_blank" rel="noopener noreferrer">Reddit&lt;/a>❤️&lt;/p></summary><content type="html"><![CDATA[<p>Since the article is so long now, for the convenience of readers, the content of this post
has been moved to a separate site:</p>
<ul>
<li>Document Site: <a href="https://nixos-and-flakes.thiscute.world/" target="_blank" rel="noopener noreferrer">https://nixos-and-flakes.thiscute.world/</a></li>
<li>GitHub Repo: <a href="https://github.com/ryan4yin/nixos-and-flakes-book" target="_blank" rel="noopener noreferrer">https://github.com/ryan4yin/nixos-and-flakes-book</a></li>
</ul>
<p>Thanks for the feedback, criticism, suggestions from<a href="https://www.reddit.com/r/NixOS/comments/14fvz1q/comment/jp4xhj3/?context=3" target="_blank" rel="noopener noreferrer">Reddit</a>❤️</p>
]]></content><category scheme="taxonomy:Authors" term="ryan4yin" label="ryan4yin"/><category scheme="taxonomy:Categories" term="tech" label="tech"/><category scheme="taxonomy:Series" term="nixos-nix-flakes" label="NixOS &amp; Nix Flakes"/><category scheme="taxonomy:Tags" term="nixos" label="NixOS"/><category scheme="taxonomy:Tags" term="nix" label="Nix"/><category scheme="taxonomy:Tags" term="flakes" label="Flakes"/><category scheme="taxonomy:Tags" term="linux" label="Linux"/><category scheme="taxonomy:Tags" term="devops" label="DevOps"/><category scheme="taxonomy:Tags" term="tutorial" label="Tutorial"/></entry><entry><title type="html">Summary of My 2021</title><link href="https://thiscute.world/en/posts/2021-summary/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://thiscute.world/en/now/?utm_source=atom_feed" rel="related" type="text/html" title="Now"/><link href="https://thiscute.world/en/about/?utm_source=atom_feed" rel="related" type="text/html" title="About"/><link href="https://thiscute.world/en/posts/the-end-of-another-semester/?utm_source=atom_feed" rel="related" type="text/html" title="The End of Another Semester"/><id>https://thiscute.world/en/posts/2021-summary/</id><published>2022-01-23T01:40:00+08:00</published><updated>2022-01-23T01:40:00+08:00</updated><summary type="html">&lt;h2 id="gossip" class="headerLink">
&lt;a href="#gossip" class="header-mark">&lt;/a>Gossip&lt;/h2>&lt;p>Another year has passed in the twinkling of an eye, and this New year, the global epidemic
has set a new record. After Christmas, the daily increase in the United States has
directly exceeded 1 million. In China, poor management in Xi&amp;rsquo;an has led to hunger.&lt;/p>
&lt;p>COVID-19 has been for more than two years.&lt;/p>
&lt;p>Back to the point, after leaving from W Company at the beginning of this year, I was very
lucky to join the current company, Mobiuspace, and I was mixed in the process of
integrating into Mobiuspace. However, I am quite satisfied with the overall results, the
current work has been on the right track, but also found a lot of opportunities.&lt;/p></summary><content type="html"><![CDATA[<h2 id="gossip" class="headerLink">
    <a href="#gossip" class="header-mark"></a>Gossip</h2><p>Another year has passed in the twinkling of an eye, and this New year, the global epidemic
has set a new record. After Christmas, the daily increase in the United States has
directly exceeded 1 million. In China, poor management in Xi&rsquo;an has led to hunger.</p>
<p>COVID-19 has been for more than two years.</p>
<p>Back to the point, after leaving from W Company at the beginning of this year, I was very
lucky to join the current company, Mobiuspace, and I was mixed in the process of
integrating into Mobiuspace. However, I am quite satisfied with the overall results, the
current work has been on the right track, but also found a lot of opportunities.</p>
<h2 id="life" class="headerLink">
    <a href="#life" class="header-mark"></a>Life</h2><ul>
<li>In January, I set up this Blog, and I met <a href="https://chee5e.space/" target="_blank" rel="noopener noreferrer">@Cheese</a>，@Cheese
helped me adjust the style of the &ldquo;Friends&rdquo; page, thanks him very much~</li>
<li>In February, I fired my boss, and then what to say? I suddenly felt open-minded and
changed my mindset 180 degrees. It was great, but I was actually very worried about my
shortcomings in all aspects. Anyway, I&rsquo;m in a complicated mood. I talked a lot with<a href="https://sanshiliuxiao.top/" target="_blank" rel="noopener noreferrer">@是格子啊</a>, <a href="https://chee5e.space/" target="_blank" rel="noopener noreferrer">@Cheese</a> and former
colleagues). Thank you very much for helping me sort out my thoughts and giving me an
affirmation. At the same time, I was recommended by <a href="https://chee5e.space/" target="_blank" rel="noopener noreferrer">@Cheese</a> and
started using twitter.</li>
<li>I climbed the mountain every day to see the scenery, bought a hammock to take a nap in
the park, practiced the harmonica and bamboo flute, and played like this for a month.
<ul>
<li><figure><img src="/images/2021-summary/hammock.webp">
</figure>
</li>
</ul>
</li>
<li>In March, I started looking for a job. After meeting with several companies, I was very
lucky to enter Mobiuspace and became a new SRE. The experience of a year in Mobiuspace
is written in the &ldquo;work&rdquo; section, which is skipped here.</li>
<li>At the end of March, I watched the movie &ldquo;Raya and The Last Dragon&rdquo; (the only movie I
watched in 2021), and the ending song was very good.</li>
<li>In April, by various coincidences, I unexpectedly found that my junior high school
classmate&rsquo;s residence was less than one kilometer away from me. I had a meal of hometown
food and bayberry wine at his house. It tasted very good!</li>
<li>In August, my two cousin came to Shenzhen for a summer internship. I crossed Shenzhen&rsquo;s
east-west coastline with them. The scenery was great, but we were really hot and thirsty
on the way.</li>
<li>In October
<ul>
<li>Joined Mobiuspace&rsquo;s surfing team, surfing and have a seaside barbecue for the first
time.</li>
<li>Bought roller skates, learned reverse skating and step steering, and reviewed some
basic skills learned in college.</li>
</ul>
</li>
<li>In December, Bought a YunMi RO Filterred Water Dispenser, and many kinds of tea.
Currently I prefer to drink <strong>Black Tea</strong>, such as Dianhong - Yunnan Gold, Redsunion
Keemun.
<ul>
<li><figure><img  loading="lazy" src=/images/2021-summary/yunmi-ro-filterred-water-dispenser.webp     ><figcaption class="image-caption">YunMi RO Filterred Water Dispenser</figcaption>
</figure></li>
<li><figure><img  loading="lazy" src=/images/2021-summary/my-tea.webp     ><figcaption class="image-caption">All kinds of tea</figcaption>
</figure></li>
</ul>
</li>
<li>In January 2022, I bought Anime PVC Figures for the first time. After putting these
figures, I felt that my room was more youthful and colorful.
<ul>
<li><figure><img  loading="lazy" src=/images/2021-summary/Posts-and-Garage-Kit.webp     ><figcaption class="image-caption">Anime PVC Figures and Anime Figure Painting in my room</figcaption>
</figure></li>
</ul>
</li>
</ul>
<h2 id="readings" class="headerLink">
    <a href="#readings" class="header-mark"></a>Readings</h2><ul>
<li>After resigning at the beginning of the year, I went sightseeing, and my mind was a
little more calm. I read more than half of the book &ldquo;From Lost to Found the Pacific
Crest Trail&rdquo;.</li>
<li>In June, the community organized us to get vaccinated against COVID-19, I read the book&ldquo;Youth Post Station - A Portrait of Working Girls in Shenzhen&rdquo; in the waiting room,
which is mainly about the lives of working girls in the 1980s and 1990s. The writing is
very real and the feelings are very delicate.</li>
<li>At the end of the year, my second grandfather died. After attending the funeral, I
vaguely found some profound changes in my mind. I finished reading &ldquo;Moon Palace&rdquo;, which
tells the tragic life of the protagonist.</li>
<li>Most of the rest of my spare time, boring, do not want to learn anything, do not want to
exercise, so I read a lot of web novels to pass the time.</li>
</ul>
<h2 id="music" class="headerLink">
    <a href="#music" class="header-mark"></a>Music</h2><p>After resigning at the beginning of the year, I practiced the bamboo flute and the blues
harmonica for some time, but then it was basically silent after I got a job.</p>
<p>On the whole, I have made little progress this year.</p>
<figure><img src="/images/2021-summary/midi-keyboard-flute-harmonica.webp">
</figure>

<h2 id="working---the-year-i-work-in-mobiuspace" class="headerLink">
    <a href="#working---the-year-i-work-in-mobiuspace" class="header-mark"></a>Working - The year I work in Mobiuspace</h2><p>When I first joined Mobiuspace in March, I was curious, but I was so cautious that I
couldn&rsquo;t believe I could get into such a great company. I felt like I was out of luck.
After all, Mobiuspace, whether it is the level of colleagues or the working atmosphere, or
the number of customers, compared with my last company is qualitatively different.</p>
<p><figure><img  loading="lazy" src=/images/2021-summary/workstation-1.webp     ><figcaption class="image-caption">My first station in Mobiuspace</figcaption>
</figure> After
getting familiar with the contents and methods of the work, leader tried his best to give
me the work that best matched my interests, helping me solve problems, and at the same
time giving me great autonomy, which was really great.</p>
<p>However, a high degree of autonomy also brings higher difficulty in work. I have been in a
hurry, confused, and even self-doubted when I encounter difficulties. I am worried about
whether I will run away the next day.</p>
<p>But fortunately, I still have the ability to adjust my mindset, take responsibility and
finish the work step by step.</p>
<p>When there were several delays in my work, leader accompanied me to work overtime. After
the work was done, he took me to a big dinner to reward myself. I really thanked him for
his help and support.</p>
<p><figure><img  loading="lazy" src=/images/2021-summary/workstation-2.webp     ><figcaption class="image-caption">My new station, near the floor-to-ceiling window, the view is great.</figcaption>
</figure></p>
<p>Looking back at the summary and outlook for 2020, I find that the actual progress this
year is very different from what I expected last year. The initial goal was only about 10%
achieved, but because I was exposed to a lot of unexpected things, I was generally
satisfied:</p>
<ul>
<li>It is a great gain to be familiar with the culture and working style of the new
company - Mobiuspace, and my working style has been greatly improved.</li>
<li>Contact and be familiar with Mobiuspace&rsquo;s AWS online environment
<ul>
<li>Responsible for maintaining the online Kubernetes management platform, the first time
I came into contact with the online cluster peak QPS was tens of thousands. It is of
great significance that I have changed from being careful at the beginning to becoming
a veteran now.</li>
<li>Using python to write several Kubernetes management platform services, this is also my
first time to write online services, quite a sense of achievement</li>
<li>In the second half of the year, I spent a lot of energy on the analysis and control of
AWS cost, and got some good results, which benefited a lot.</li>
<li>Learned the simple use of Nginx, just enough to maintain the company&rsquo;s pre-existing
Nginx proxy configuration.</li>
</ul>
</li>
<li>Lead the completion of &ldquo;create a new K8s cluster and migrate the services to the new
cluster&rdquo;. Although it is not a very difficult thing, but this should be my greatest
achievement in 2021.
<ul>
<li>I also encountered all kinds of problems in the process of upgrading. When I first
upgraded and migrated, I prepared for a long time and panicked. As a result, there was
still something wrong with some of the services during the upgrade. I was really
confused at that time.</li>
</ul>
</li>
<li>Casually wrote a few demo of Go, and made little progress.</li>
<li>Learning the rust language for a week, quickly finished reading The Book, and rewrote a<code>video2chars</code> in rust</li>
<li>Learned the underlying principle of Linux container: cgroups/namespace technology, and
implemented a demo with go/rust</li>
<li>Learned various network interfaces and <code>iptables</code> of Linux</li>
<li>Be familiar with PromQL/Grafana</li>
</ul>
<p>If I give myself a score, it&rsquo;s &ldquo;good&rdquo;. Because I am not very enterprising, so the result
can not be called &ldquo;excellent&rdquo;.</p>
<p>By the way, the new office of Mobiuspace is really great. See my twitter for details：</p>
<blockquote class="twitter-tweet"><p lang="zh" dir="ltr">新办公区真好呐～<br><br>值此良辰美景，好想整个榻榻米坐垫，坐在角落的落地窗边工作🤣<br>那种使用公共设施工（mo）作（yu）的乐趣，以及平常工位见不到的景色交相辉映，是不太好表述的奇妙体验 <a href="https://t.co/FASffzw8N3">pic.twitter.com/FASffzw8N3</a></p>&mdash; ryan4yin | 於清樂 (@ryan4yin) <a href="https://twitter.com/ryan4yin/status/1482891448731070466?ref_src=twsrc%5Etfw">January 17, 2022</a></blockquote> <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
<h2 id="a-sense-of-technology" class="headerLink">
    <a href="#a-sense-of-technology" class="header-mark"></a>A Sense of Technology</h2><ul>
<li>Istio Service Mesh: Realize that it is a bit heavy, and its development does not
necessarily match our needs
<ul>
<li>The cost of the Sidecar model is relatively high, and without tuning, it will bring a
1/3 to 1/4 increase in the cost of the service, as well as a increase of delay.</li>
<li>Thinking about whether to continue to invest in Istio or to switch to other options.</li>
</ul>
</li>
<li>Service Mesh is still evolving rapidly, and the future trend should be eBPF + Envoy +
WASM.
<ul>
<li>Cilium&rsquo;s eBPF-based Service Mesh is a new trend (it falls back to Per-Node Proxy mode
when using advanced features). It&rsquo;s expected to hit other Service Mesh of Sidecar mode
in terms of cost and delay.</li>
</ul>
</li>
<li>As for the log of K8s cluster, we currently use a self-developed system based on gelf
protocol, but there are a lot of problems.
<ul>
<li>From the point of view of improving the maintainability and ease of use of the log
system, loki is worth exploring.</li>
</ul>
</li>
<li>In terms of K8s cluster management, I think the upgrade iteration of the cluster can be
done more automatically and reliably. Next year, we can explore more in the direction of
multi-cluster management.</li>
<li><a href="https://kubernetes.io/docs/tasks/configure-pod-container/quality-service-pod/" target="_blank" rel="noopener noreferrer">Pod Service Quality</a>:
For non-core services, the amount of requests resources can be appropriately reduced
instead of fully reserved (<code>Guaranteed</code>) to improve resource utilization.</li>
<li>The official HPA capability is not enough. Our developers needs to scale the services
based on QPS/Queue or other parameters. We should continue to promote the landing of<a href="https://github.com/kedacore/keda" target="_blank" rel="noopener noreferrer">KEDA</a>.</li>
<li>In terms of cost control, I realized the benefits of ARM architecture and AWS Spot EC2.</li>
<li>There is a lot of potential room for optimization of cross-area traffic cost.</li>
<li>AI has landed in various fields, affecting our daily use of voice navigation, song
synthesis, speech synthesis and many other fields, including, of course, scenarios
related to SRE work: AIOps</li>
</ul>
<h2 id="prospects-of-2022" class="headerLink">
    <a href="#prospects-of-2022" class="header-mark"></a>Prospects of 2022</h2><h3 id="on-the-side-of-technology" class="headerLink">
    <a href="#on-the-side-of-technology" class="header-mark"></a>On the Side of Technology</h3><p>The outlook for this year is more focused. I strive to achieve 50%, which will be a big
breakthrough.</p>
<ol>
<li>Proficient in Go and use in at least two projects
<ol>
<li>To forge iron, one must be strong. Coding is the foundation of IT.</li>
</ol>
</li>
<li>Learn kubebuilder, k8s source code.</li>
<li>Network Technologies
<ol>
<li>Service Mesh - Istio</li>
<li>Network Proxy - Envoy/APISIX</li>
<li>K8s Network Plugins: Cilium + eBPF</li>
</ol>
</li>
<li>Optimization of cost and Service Stability of AWS EKS.
<ol>
<li>Save the cost of <code>DataTransfer-Regional-Bytes</code>.</li>
<li>K8s new
feature：<a href="https://kubernetes.io/docs/concepts/services-networking/topology-aware-hints/" target="_blank" rel="noopener noreferrer">Topology Aware Hints</a></li>
<li>Istio:<a href="https://istio.io/latest/docs/tasks/traffic-management/locality-load-balancing/" target="_blank" rel="noopener noreferrer">Locality Load Balancing</a></li>
<li>Optimize the EC2 Instance Type：
<ol>
<li>Use the more appropriate instance types</li>
<li>Use Instance of ARM architecture, to reduce cost and increase efficiency</li>
</ol>
</li>
<li>Popularize gRPC protocol</li>
</ol>
</li>
<li>Get through the local development environment and the running environment on the cloud
<ol>
<li><a href="https://github.com/nocalhost/nocalhost" target="_blank" rel="noopener noreferrer">nocalhost</a></li>
</ol>
</li>
<li>Multicluster Application Deployment and Disaster Recovery
<ol>
<li>karmada</li>
</ol>
</li>
<li>Explore new technologies and other possibilities（Low priority）
<ol>
<li>Kubernetes-based Service platform, Future Development Direction
<ol>
<li>kubevela</li>
<li>buildpack</li>
<li>should I promote GitOps</li>
<li>openkruise</li>
</ol>
</li>
<li>Development of Serverless platform
<ol>
<li>Knative</li>
<li>OpenFunction</li>
</ol>
</li>
<li>Machine learning / Deep learning: I would like to try to apply AI to music, voice,
SRE and other areas I am interested in&hellip;</li>
</ol>
</li>
</ol>
<p>It can be expected that there will be so many opportunities for the SRE team in 2022. I
really look forward to which parts I can be responsible for and what results I can
achieve.</p>
<h3 id="on-the-side-of-life" class="headerLink">
    <a href="#on-the-side-of-life" class="header-mark"></a>On the Side of Life</h3><ul>
<li>Sports:
<ul>
<li>Practice roller skating well and learn some tricks, at least twice a month.</li>
<li>Make more than three short trips</li>
</ul>
</li>
<li>Music
<ul>
<li>Learn music theory again&hellip;</li>
<li>Practice MIDI Keyboard.</li>
<li>Learn Synthesizer V Stduio Pro + Qingsu AI. Cover some of my favorite songs.</li>
</ul>
</li>
<li>Reading: The list is as follows. Read at least one of them in a month.
<ul>
<li>Literature
<ul>
<li><input checked="" disabled="" type="checkbox"> No Longer Human, Osamu Dazai</li>
<li><input disabled="" type="checkbox"> The End of Your Life Book club, Will Schwalbe</li>
<li><input disabled="" type="checkbox"> One Hundred Years of Solitude, Gabriel Garcia Marquez</li>
<li><input disabled="" type="checkbox"> Love in the Time of Cholera, Gabriel Garcia Marquez</li>
<li><input disabled="" type="checkbox"> Sophie&rsquo;s World</li>
<li><input disabled="" type="checkbox"> Stories of Your Life and Others, Ted Chiang</li>
<li><input disabled="" type="checkbox"> 《沈从文的后半生》</li>
<li><input disabled="" type="checkbox"> 《我与地坛》</li>
<li><input disabled="" type="checkbox"> 《将饮茶》</li>
<li><input disabled="" type="checkbox"> 《My Country and My People - 林语堂》</li>
<li><input disabled="" type="checkbox"> 《房思琪的初恋乐园》</li>
</ul>
</li>
<li>social &amp; sciences
<ul>
<li><input checked="" disabled="" type="checkbox"> Death Is But a Dream: I want to know more about &ldquo;death&rdquo; this year.</li>
<li><input disabled="" type="checkbox"> 《怎样征服美丽少女》：哈哈</li>
<li><input disabled="" type="checkbox"> Harper Perennial Modern Classics</li>
<li><input disabled="" type="checkbox"> Social Psychology</li>
<li><input disabled="" type="checkbox"> The Courage to Be Disliked</li>
<li><input disabled="" type="checkbox"> The Body: A Guide for Occupants</li>
<li><input disabled="" type="checkbox"> The Structure of Scientific Revolutions</li>
<li><input disabled="" type="checkbox"> Deng Xiaoping and the Transformation of China</li>
<li><input disabled="" type="checkbox"> On China</li>
<li><input disabled="" type="checkbox"> 《刘擎西方现代思想讲义》</li>
<li><input disabled="" type="checkbox"> The Order of Time</li>
<li><input disabled="" type="checkbox"> The Universe in Your Hand</li>
<li><input disabled="" type="checkbox"> 《圆圈正义-作为自由前提的信念》</li>
<li><input disabled="" type="checkbox"> What Do You Say After You Say Hello?</li>
</ul>
</li>
<li>Technology
<ul>
<li><input disabled="" type="checkbox"> Complexity: A Guided Tour</li>
<li><input disabled="" type="checkbox"> Site Reliability Engineering: How Google Runs Production Systems</li>
<li><input disabled="" type="checkbox"> The Phoenix Project - A Novel About IT, DevOps, and Helping Your Business Win</li>
<li><input disabled="" type="checkbox"> The Mythical Man Month and Other Essays on Software Engineering</li>
<li><input disabled="" type="checkbox"> 《绩效使能：超越 OKR》</li>
<li><input disabled="" type="checkbox"> Powerful: Building a Culture of Freedom and Responsibility</li>
<li><input disabled="" type="checkbox"> 《幕后产品-打造突破式思维》</li>
<li><input disabled="" type="checkbox"> Professional Linux Kernel Architecture</li>
<li><input disabled="" type="checkbox"> <a href="https://man7.org/tlpi/" target="_blank" rel="noopener noreferrer">The Linux Programming Interface: A Linux and UNIX System Programming Handbook</a></li>
<li><input disabled="" type="checkbox"> Refactoring - Improving the Design of Existing Code</li>
<li><input disabled="" type="checkbox"> How Networks Work</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="in-summary" class="headerLink">
    <a href="#in-summary" class="header-mark"></a>In Summary</h2><p>At the beginning of 2021, my friend and I gave myself the expectation of「拆破玉笼飞彩凤，
顿开金锁走蛟龙」, which felt that it had really come true.</p>
<p>This year, I hope to be able to &ldquo;Going up one more storey&rdquo; both in life and at work.</p>
]]></content><category scheme="taxonomy:Authors" term="ryan4yin" label="ryan4yin"/><category scheme="taxonomy:Categories" term="life" label="life"/><category scheme="taxonomy:Categories" term="tech" label="tech"/><category scheme="taxonomy:Tags" term="summary" label="Summary"/></entry><entry><title type="html">The End of Another Semester</title><link href="https://thiscute.world/en/posts/the-end-of-another-semester/?utm_source=atom_feed" rel="alternate" type="text/html"/><id>https://thiscute.world/en/posts/the-end-of-another-semester/</id><published>2017-06-27T01:28:45+08:00</published><updated>2017-06-27T01:28:45+08:00</updated><summary type="html">&lt;!-- Love Story - The Piano Guys -->
&lt;meting-js server="netease" type="song" id="29460780" theme="#448aff">&lt;/meting-js>
&lt;p>Ah, there are still ten days to get rid of the city and return to that reassuring mountain
forest, waiting and anxious, wondering why the remaining ten days are so difficult.&lt;/p>
&lt;p>The final review is a mess again. I am really lazy&amp;hellip;&lt;/p>
&lt;p>It is so unrealistic for me to have such a big dream that I have finished thousands of
lines of code. I kind of want to accept my fate.&lt;/p></summary><content type="html"><![CDATA[<!-- Love Story - The Piano Guys -->
<meting-js server="netease" type="song" id="29460780" theme="#448aff"></meting-js>
<p>Ah, there are still ten days to get rid of the city and return to that reassuring mountain
forest, waiting and anxious, wondering why the remaining ten days are so difficult.</p>
<p>The final review is a mess again. I am really lazy&hellip;</p>
<p>It is so unrealistic for me to have such a big dream that I have finished thousands of
lines of code. I kind of want to accept my fate.</p>
<p>After one o&rsquo;clock in the middle of the night, I was still not used to the air conditioner
in the bedroom, but the cool breeze on the aisle balcony is very comfortable, and the
serenity of the city now also has a bit of charm.</p>
<p>But anyway, I really want to go home.</p>
]]></content><category scheme="taxonomy:Authors" term="ryan4yin" label="ryan4yin"/><category scheme="taxonomy:Categories" term="life" label="life"/></entry></feed>