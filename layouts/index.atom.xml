{{ printf `<?xml version="1.0" encoding="utf-8"?>` | safeHTML }} {{/* ref: https://validator.w3.org/feed/docs/atom.html */}}
<feed xmlns="http://www.w3.org/2005/Atom"{{ with site.LanguageCode }} xml:lang="{{ . }}"{{ end }}>
    <generator uri="https://gohugo.io/" version="{{ hugo.Version }}">Hugo</generator>
    {{- $title := site.Title -}}
    {{- with .Title -}}
        {{- if (not (eq . site.Title)) -}}
            {{- $title = printf `%s %s %s` . (i18n "feed_title_on" | default "on") site.Title -}}
        {{- end -}}
    {{- end -}}
    {{ printf `<title type="html"><![CDATA[%s]]></title>` $title | safeHTML }}
    {{ with (or (.Param "subtitle") (.Param "tagline")) }}
        {{ printf `<subtitle type="html"><![CDATA[%s]]></subtitle>` . | safeHTML }}
    {{ end }}
    {{ $output_formats := .OutputFormats }}
    {{ range $output_formats -}}
        {{- $rel := (or (and (eq "atom" (.Name | lower)) "self") "alternate") -}}
        {{ with $output_formats.Get .Name }}
            {{ printf `<link href=%q rel=%q type=%q title=%q />` .Permalink $rel .MediaType.Type .Name | safeHTML }}
        {{- end -}}
    {{- end }}
    <updated>{{ now.Format "2006-01-02T15:04:05-07:00" | safeHTML }}</updated>
    {{ with site.Copyright }}
        {{- $copyright := replace . "{year}" now.Year -}} {{/* In case the site.copyright uses a special string "{year}" */}}
        {{- $copyright = replace $copyright "&copy;" "Â©" -}}
        <rights>{{ $copyright | plainify }}</rights>
    {{- end }}
    {{ with .Param "feed" }}
        {{/* For this to work, the $icon file should be present in the assets/ directory */}}
        {{- $icon := .icon | default "icon.svg" -}}
        {{- with resources.Get $icon -}}
            <icon>{{ (. | fingerprint).Permalink }}</icon>
        {{- end }}

        {{/* For this to work, the $logo file should be present in the assets/ directory */}}
        {{- $logo := .logo | default "logo.svg" -}}
        {{- with resources.Get $logo -}}
            <logo>{{ (. | fingerprint).Permalink }}</logo>
        {{- end }}
    {{ end }}
    {{ with site.Author.name -}}
        <author>
            <name>{{ . }}</name>
            {{ with site.Author.email }}
                <email>{{ . }}</email>
            {{ end -}}
        </author>
    {{- end }}
    {{ with site.Params.id }}
        <id>{{ . | plainify }}</id>
    {{ else }}
        <id>{{ .Permalink }}</id>
    {{ end }}

    {{/* Verify that this feed belongs to my follow.is account. */}}
    <follow_challenge>
        <feedId>52340201851637768</feedId>
        <userId>80092458428908544</userId>
    </follow_challenge>

    {{- $feed_sections := site.Params.feedSections | default site.Params.mainSections -}}
    {{/* Range through only the pages with a Type in $feed_sections. */}}
    {{- $pages := where .RegularPages "Type" "in" $feed_sections -}}
    {{- if (eq .Kind "home") -}}
        {{- $pages = where site.RegularPages "Type" "in" $feed_sections -}}
    {{- end -}}
    {{/* Remove the pages that have the disable_feed parameter set to true. */}}
    {{- $pages = where $pages ".Params.disable_feed" "!=" true -}}
    {{/* Remove the pages that have the unlisted parameter set to true. */}}
    {{- $pages = where $pages ".Params.unlisted" "!=" true -}}
    {{- range first 30 $pages }}
        {{ $page := . }}
        <entry>
            {{ printf `<title type="html"><![CDATA[%s]]></title>` .Title | safeHTML }}
            <link href="{{ .Permalink }}?utm_source=atom_feed" rel="alternate" type="text/html" />
            {{/* rel=related: See https://validator.w3.org/feed/docs/atom.html#link */}}
            {{- range first 5 (site.RegularPages.Related .) }}
                <link href="{{ .Permalink }}?utm_source=atom_feed" rel="related" type="text/html" title="{{ .Title }}" />
            {{- end }}
            {{ with .Params.id }}
                <id>{{ . | plainify }}</id>
            {{ else }}
                <id>{{ .Permalink }}</id>
            {{ end }}
            {{ with .Params.author -}}
                {{- range . -}} <!-- Assuming the author front-matter to be a list -->
                    <author>
                        <name>{{ . }}</name>
                    </author>
                {{- end -}}
            {{- end }}
            <published>{{ .Date.Format "2006-01-02T15:04:05-07:00" | safeHTML }}</published>
            <updated>{{ .Lastmod.Format "2006-01-02T15:04:05-07:00" | safeHTML }}</updated>
            <summary type="html">{{ .Summary | html }}</summary>
            {{- /* Featured image */ -}}

            {{- $imageHtml := "" -}}
            {{/* Skip the image if it's not present(implement via with) */}}
            {{ with .Resources.GetMatch "featured-image" }}
                {{- $imageURL  := .RelPermalink -}}
                {{- $width  := .Width -}}
                {{- $height := .Height -}}
                {{- $imageHtml := printf `<figure><img class="lazyload" src="%s" height="%d" width="%d"><figcaption></figcaption></figure>` $imageURL $height $width | safeHTML -}}
            {{ end }}

            {{ printf `<content type="html"><![CDATA[%s%s]]></content>` $imageHtml .Content | safeHTML }}
            {{ with site.Taxonomies }}
                {{ range $taxo,$_ := . }} <!-- Defaults taxos: "tags", "categories" -->
                    {{ with $page.Param $taxo }}
                        {{ $taxo_list := . }} <!-- $taxo_list will be the tags/categories list -->
                        {{ with site.GetPage (printf "/%s" $taxo) }}
                            {{ $taxonomy_page := . }}
                            {{ range $taxo_list }} <!-- Below, assuming pretty URLs -->
                                <category scheme="taxonomy:{{ printf "%s" $taxo | humanize }}" term="{{ (. | urlize) }}" label="{{ . }}" />
                            {{ end }}
                        {{ end }}
                    {{ end }}
                {{ end }}
            {{ end }}
        </entry>
    {{ end }}
</feed>
