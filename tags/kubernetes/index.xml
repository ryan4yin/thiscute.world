<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Kubernetes - 标签 - This Cute World</title><link>https://thiscute.world/tags/kubernetes/</link><description>Kubernetes - 标签 - This Cute World</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 15 Jun 2025 17:43:44 +0800</lastBuildDate><atom:link href="https://thiscute.world/tags/kubernetes/" rel="self" type="application/rss+xml"/><item><title>KubeCon China 2025 见闻</title><link>https://thiscute.world/posts/kubecon-china-2025/</link><pubDate>Sun, 15 Jun 2025 17:43:44 +0800</pubDate><author><name>於清樂</name><uri>https://thiscute.world/authors/ryan4yin</uri></author><guid>https://thiscute.world/posts/kubecon-china-2025/</guid><description><![CDATA[<div class="featured-image">
                <img src="/posts/kubecon-china-2025/featured-image.webp" referrerpolicy="no-referrer">
            </div><h2 id="前言" class="headerLink">
    <a href="#%e5%89%8d%e8%a8%80" class="header-mark"></a>前言</h2><p>今年 1 月底辞职后，在家过了个年，接着在上海、张家界、重庆、苏州、南京玩了一圈，4 月中旬才回深圳开始找工作。本来看到 6 月就是 KubeCon China 2025，还不太确定自己到时候会不会有时间去。不过很幸运，最后确定 offer 的公司非常重视技术，leader 在面试的时候就说看到我博客里写了
KubeCon 的经历，公司非常鼓励参加这种技术交流活动，去报个 Talk 也完全可以，公司报销所有费用。</p>
<p>于是我在入职还没满一个月的时候，就直接公费出差去香港 KubeCon China 2025 玩了一圈（</p>
<blockquote>
  <p>也问过同事们是否有想法，但种种原因最后还是只有我一个人参加了（悲</p>

</blockquote>]]></description></item><item><title>KubeCon China 2024 之旅</title><link>https://thiscute.world/posts/kubecon-china-2024/</link><pubDate>Tue, 27 Aug 2024 10:10:22 +0800</pubDate><author><name>於清樂</name><uri>https://thiscute.world/authors/ryan4yin</uri></author><guid>https://thiscute.world/posts/kubecon-china-2024/</guid><description><![CDATA[<div class="featured-image">
                <img src="/posts/kubecon-china-2024/kubecon-china-2024-linus.webp" referrerpolicy="no-referrer">
            </div><h2 id="前言" class="headerLink">
    <a href="#%e5%89%8d%e8%a8%80" class="header-mark"></a>前言</h2><p>很早就有了解到今年的 KubeCon China 会在香港举办，虽然有些兴趣，但我最初是有被 KubeCon 高昂的门票价格劝退了的。</p>
<p>有时候不得不相信运气的魔力，机缘巧合之下，我从朋友 @Kev 处得知了 KubeCon 的「最终用户门票计划」并借此 0 元购了门票，又邀上了 <a href="https://0xffff.one/" target="_blank" rel="noopener noreferrer">0xFFFF 社区</a> 的<a href="https://0xffff.one/u/Chever-John" target="_blank" rel="noopener noreferrer">@Chever-John</a>
<a href="https://0xffff.one/u/0xdeadbeef" target="_blank" rel="noopener noreferrer">@0xdeadbeef</a> <a href="https://0xffff.one/u/MingLLuo" target="_blank" rel="noopener noreferrer">@茗洛</a> 三位朋友一起参加，在香港租了个 airbnb 住宿，期间也逛了香港城市中的不少地方，收获颇丰。</p>
<blockquote>
  <p>其实本来也尝试过邀请其他认识的朋友同事，但都因为种种原因无法参加，略感遗憾。</p>

</blockquote>]]></description></item><item><title>Kubernetes 集群伸缩组件 - Karpenter</title><link>https://thiscute.world/posts/kubernetes-cluster-autoscaling-1-karpenter/</link><pubDate>Wed, 10 Jul 2024 09:17:31 +0800</pubDate><author><name>於清樂</name><uri>https://thiscute.world/authors/ryan4yin</uri></author><guid>https://thiscute.world/posts/kubernetes-cluster-autoscaling-1-karpenter/</guid><description><![CDATA[<div class="featured-image">
                <img src="/posts/kubernetes-cluster-autoscaling-1-karpenter/karpenter.png" referrerpolicy="no-referrer">
            </div><h2 id="前言" class="headerLink">
    <a href="#%e5%89%8d%e8%a8%80" class="header-mark"></a>前言</h2><p>Kubernetes 具有非常丰富的动态伸缩能力，这体现在多个层面：</p>
<ol>
<li>Workloads 的伸缩：通过 Horizontal Pod Autoscaler（HPA）和 Vertical Pod
Autoscaler（VPA）等资源，可以根据资源使用情况自动调整 Pod 的数量和资源配置。
<ul>
<li>相关项目：
<ul>
<li><a href="https://github.com/kubernetes-sigs/metrics-server" target="_blank" rel="noopener noreferrer">metrics-server</a>: 采集指标数据供
HPA 使用</li>
<li><a href="https://github.com/kedacore/keda" target="_blank" rel="noopener noreferrer">KEDA</a>: 用于支持更多的指标数据源与触发方式</li>
<li><a href="https://github.com/kubernetes/autoscaler" target="_blank" rel="noopener noreferrer">kubernetes/autoscaler</a>: 提供 VPA 功能</li>
</ul>
</li>
</ul>
</li>
<li>Nodes 的伸缩：根据集群的负载情况，可以自动增加或减少 Nodes 的数量，以适应负载的变化。
<ul>
<li>相关项目：
<ul>
<li><a href="https://github.com/kubernetes/autoscaler" target="_blank" rel="noopener noreferrer">kubernetes/autoscaler</a>: 目前最流行的
Node 伸缩方案，支持绝大多数云厂商。</li>
<li><a href="https://github.com/kubernetes-sigs/karpenter" target="_blank" rel="noopener noreferrer">karpenter</a>: AWS 捐给 CNCF 的一个新兴
Node 伸缩方案，目前仅支持 AWS/Azure，但基于其核心库可以很容易地扩展支持其他云厂商。</li>
</ul>
</li>
</ul>
</li>
</ol>
<p>本文主要介绍新兴 Node 伸缩与管理方案 Karpenter 的优势、应用场景及使用方法。</p>]]></description></item><item><title>Kubernetes 中的证书管理工具 - cert-manager</title><link>https://thiscute.world/posts/kubernetes-cert-management/</link><pubDate>Sun, 31 Jul 2022 15:11:46 +0800</pubDate><author><name>於清樂</name><uri>https://thiscute.world/authors/ryan4yin</uri></author><guid>https://thiscute.world/posts/kubernetes-cert-management/</guid><description><![CDATA[<div class="featured-image">
                <img src="/posts/kubernetes-cert-management/cert-manager.webp" referrerpolicy="no-referrer">
            </div><p>我在之前的文章<a href="https://thiscute.world/posts/about-tls-cert/" target="_blank" rel="noopener noreferrer">写给开发人员的实用密码学（八）—— 数字证书与 TLS 协议</a>
中，介绍了如何使用 openssl 生成与管理各种用途的数字证书，也简单介绍了如何通过 certbot 等工具与 ACME 证书申请与管理协议，进行数字证书的申请与自动更新（autorenew）。</p>]]></description></item><item><title>FinOps for Kubernetes - 如何拆分 Kubernetes 成本</title><link>https://thiscute.world/posts/finops-for-kubernetes/</link><pubDate>Wed, 04 May 2022 23:15:00 +0800</pubDate><author><name>於清樂</name><uri>https://thiscute.world/authors/ryan4yin</uri></author><guid>https://thiscute.world/posts/finops-for-kubernetes/</guid><description><![CDATA[<div class="featured-image">
                <img src="/posts/finops-for-kubernetes/finops-for-kubernetes.webp" referrerpolicy="no-referrer">
            </div><blockquote>
  <p>FinOps 是一种不断发展的云财务管理学科和文化实践，通过帮助工程、财务、技术和业务团队在数据驱动的预算分配上进行协作，使成本预算能够产生最大的业务价值。</p>]]></description></item><item><title>部署一个 Kubernetes 集群</title><link>https://thiscute.world/posts/kubernetes-deployment-using-kubeadm/</link><pubDate>Tue, 25 Jan 2022 01:37:00 +0800</pubDate><author><name>於清樂</name><uri>https://thiscute.world/authors/ryan4yin</uri></author><guid>https://thiscute.world/posts/kubernetes-deployment-using-kubeadm/</guid><description><![CDATA[<div class="featured-image">
                <img src="/posts/kubernetes-deployment-using-kubeadm/adopt-kubernetes.webp" referrerpolicy="no-referrer">
            </div><blockquote>
  <p>本文完成于 2022-01-25，其中部分内容已经过时，仅供参考。</p>

</blockquote><blockquote>
  <p>本文由个人笔记<a href="https://github.com/ryan4yin/knowledge/tree/master/kubernetes" target="_blank" rel="noopener noreferrer">ryan4yin/knowledge</a> 整理而来，不保证正确</p>

</blockquote><h2 id="本地-kubernetes-集群安装工具" class="headerLink">
    <a href="#%e6%9c%ac%e5%9c%b0-kubernetes-%e9%9b%86%e7%be%a4%e5%ae%89%e8%a3%85%e5%b7%a5%e5%85%b7" class="header-mark"></a>本地 Kubernetes 集群安装工具</h2><blockquote>
  <p>云上的 Kubernetes 集群，基本上各云厂商都支持一键部署。这里主要关注本地部署，或者叫做裸机
(baremetal)部署</p>]]></description></item><item><title>Kubernetes 微服务最佳实践</title><link>https://thiscute.world/posts/kubernetes-best-practices/</link><pubDate>Tue, 25 Jan 2022 00:13:00 +0800</pubDate><author><name>於清樂</name><uri>https://thiscute.world/authors/ryan4yin</uri></author><guid>https://thiscute.world/posts/kubernetes-best-practices/</guid><description><![CDATA[<div class="featured-image">
                <img src="/posts/kubernetes-best-practices/kubernetes-best-practices.webp" referrerpolicy="no-referrer">
            </div><blockquote>
  <p>本文由个人笔记<a href="https://github.com/ryan4yin/knowledge/tree/master/kubernetes" target="_blank" rel="noopener noreferrer">ryan4yin/knowledge</a> 整理而来</p>

</blockquote><p>本文主要介绍我个人在使用 Kubernetes 的过程中，总结出的一套「Kubernetes 配置」，是我个人的「最佳实践」。其中大部分内容都经历过线上环境的考验，但是也有少部分还只在我脑子里模拟过，请谨慎参考。</p>]]></description></item><item><title>云原生流水线 Argo Workflows 的安装、使用以及个人体验</title><link>https://thiscute.world/posts/experience-of-argo-workflows/</link><pubDate>Wed, 27 Jan 2021 15:37:27 +0800</pubDate><author><name>於清樂</name><uri>https://thiscute.world/authors/ryan4yin</uri></author><guid>https://thiscute.world/posts/experience-of-argo-workflows/</guid><description><![CDATA[<div class="featured-image">
                <img src="/posts/experience-of-argo-workflows/argo-workflows.webp" referrerpolicy="no-referrer">
            </div><blockquote>
  <p>注意：这篇文章并不是一篇入门教程，学习 Argo Workflows 请移步官方文档<a href="https://argoproj.github.io/argo-workflows/" target="_blank" rel="noopener noreferrer">Argo Documentation</a></p>

</blockquote><p><a href="https://github.com/argoproj/argo-workflows/" target="_blank" rel="noopener noreferrer">Argo Workflows</a> 是一个云原生工作流引擎，专注于<strong>编排并行任务</strong>。它的特点如下：</p>]]></description></item><item><title>使用 Istio 进行 JWT 身份验证（充当 API 网关）</title><link>https://thiscute.world/posts/use-istio-for-jwt-auth/</link><pubDate>Mon, 06 Apr 2020 21:48:26 +0800</pubDate><author><name>於清樂</name><uri>https://thiscute.world/authors/ryan4yin</uri></author><guid>https://thiscute.world/posts/use-istio-for-jwt-auth/</guid><description><![CDATA[<div class="featured-image">
                <img src="/posts/use-istio-for-jwt-auth/istio.webp" referrerpolicy="no-referrer">
            </div><blockquote>
  <p>本文基于 Istio1.5 编写测试</p>

</blockquote><p>Istio 支持使用 JWT 对终端用户进行身份验证（Istio End User Authentication），支持多种 JWT
签名算法。</p>
<p>目前主流的 JWT 算法是 RS256/ES256。（请忽略 HS256，该算法不适合分布式 JWT 验证）</p>
<p>这里以 RSA256 算法为例进行介绍，ES256 的配置方式也是一样的。</p>]]></description></item><item><title>Kubernetes 常见错误、原因及处理方法</title><link>https://thiscute.world/posts/kubernetes-common-errors-and-solutions/</link><pubDate>Sun, 24 Nov 2019 19:26:54 +0800</pubDate><author><name>於清樂</name><uri>https://thiscute.world/authors/ryan4yin</uri></author><guid>https://thiscute.world/posts/kubernetes-common-errors-and-solutions/</guid><description><![CDATA[<div class="featured-image">
                <img src="/posts/kubernetes-common-errors-and-solutions/featured-image.webp" referrerpolicy="no-referrer">
            </div><h2 id="pod-常见错误" class="headerLink">
    <a href="#pod-%e5%b8%b8%e8%a7%81%e9%94%99%e8%af%af" class="header-mark"></a>Pod 常见错误</h2><ol>
<li>OOMKilled: Pod 的内存使用超出了 resources.limits 中的限制，被强制杀死。</li>
<li><a href="https://cloud.tencent.com/developer/article/1411527" target="_blank" rel="noopener noreferrer">SandboxChanged: Pod sandbox changed, it will be killed and re-created</a>:
很可能是由于内存限制导致容器被 OOMKilled，或者其他资源不足
<ol>
<li>如果是 OOM，容器通常会被重启，<code>kubectl describe</code> 能看到容器上次被重启的原因<code>State.Last State.Reason = OOMKilled, Exit Code=137</code>.</li>
</ol>
</li>
</ol>]]></description></item></channel></rss>