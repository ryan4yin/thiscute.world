<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tech on This Cute World</title><link>https://thiscute.world/categories/tech/</link><description>Recent content in Tech on This Cute World</description><generator>Hugo</generator><language>zh-CN</language><lastBuildDate>Fri, 03 Oct 2025 01:59:33 +0800</lastBuildDate><atom:link href="https://thiscute.world/categories/tech/index.xml" rel="self" type="application/rss+xml"/><item><title>Linux 桌面系统组件概览与故障排查指南</title><link>https://thiscute.world/posts/linux-desktop-explained/</link><pubDate>Tue, 09 Sep 2025 20:17:33 +0800</pubDate><guid>https://thiscute.world/posts/linux-desktop-explained/</guid><description>&lt;h2 id="定位与目标" class="headerLink"&gt;
 &lt;a href="#%e5%ae%9a%e4%bd%8d%e4%b8%8e%e7%9b%ae%e6%a0%87" class="header-mark"&gt;&lt;/a&gt;定位与目标&lt;/h2&gt;&lt;p&gt;Linux 桌面包含了相当多的系统组件，这些组件组合形成了一个精密的系统，它们共同管理着从硬件设备到用户会话的方方面面。&lt;/p&gt;
&lt;p&gt;即使我已经有七八年的 Linux 使用经验，在遇到系统的各种大小毛病时，还是常常觉得问题的定位跟解决很是艰难。倘若我们能像庖丁那样“目无全牛”，对整个系统的架构了如指掌，在定位问题时顺着骨节筋脉下刀，那解决起问题来自然也将游刃有余。&lt;/p&gt;</description></item><item><title>KubeCon China 2025 见闻</title><link>https://thiscute.world/posts/kubecon-china-2025/</link><pubDate>Sun, 15 Jun 2025 17:43:44 +0800</pubDate><guid>https://thiscute.world/posts/kubecon-china-2025/</guid><description>&lt;h2 id="前言" class="headerLink"&gt;
 &lt;a href="#%e5%89%8d%e8%a8%80" class="header-mark"&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;今年 1 月底辞职后，在家过了个年，接着在上海、张家界、重庆、苏州、南京玩了一圈，4 月中旬才回深圳开始找工作。本来看到 6 月就是 KubeCon China 2025，还不太确定自己到时候会不会有时间去。不过很幸运，最后确定 offer 的公司非常重视技术，leader 在面试的时候就说看到我博客里写了
KubeCon 的经历，公司非常鼓励参加这种技术交流活动，去报个 Talk 也完全可以，公司报销所有费用。&lt;/p&gt;
&lt;p&gt;于是我在入职还没满一个月的时候，就直接公费出差去香港 KubeCon China 2025 玩了一圈（&lt;/p&gt;
&lt;blockquote&gt;
 &lt;p&gt;也问过同事们是否有想法，但种种原因最后还是只有我一个人参加了（悲&lt;/p&gt;
&lt;/blockquote&gt;</description></item><item><title>我的 2024 - 稳中求进、热爱生活</title><link>https://thiscute.world/posts/2024-summary/</link><pubDate>Tue, 07 Jan 2025 17:43:44 +0800</pubDate><guid>https://thiscute.world/posts/2024-summary/</guid><description>&lt;h2 id="前言" class="headerLink"&gt;
 &lt;a href="#%e5%89%8d%e8%a8%80" class="header-mark"&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;相比跌宕起伏的 2023 年, 2024 年我少了一些焦虑与内耗, 花在技术上的时间也少了不少. 我将大量的精力转移到了徒步旅行上, 享受了诸多旅行的快乐.&lt;/p&gt;
&lt;p&gt;可能因为 23 年写的太多，24 年少了些创作的热情，也因此这份年终一直拖着。本来想效仿去年的风格过一遍一整年中比较有意义的事情，但是不太能下手。&lt;/p&gt;</description></item><item><title>KubeCon China 2024 之旅</title><link>https://thiscute.world/posts/kubecon-china-2024/</link><pubDate>Tue, 27 Aug 2024 10:10:22 +0800</pubDate><guid>https://thiscute.world/posts/kubecon-china-2024/</guid><description>&lt;h2 id="前言" class="headerLink"&gt;
 &lt;a href="#%e5%89%8d%e8%a8%80" class="header-mark"&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;很早就有了解到今年的 KubeCon China 会在香港举办，虽然有些兴趣，但我最初是有被 KubeCon 高昂的门票价格劝退了的。&lt;/p&gt;
&lt;p&gt;有时候不得不相信运气的魔力，机缘巧合之下，我从朋友 @Kev 处得知了 KubeCon 的「最终用户门票计划」并借此 0 元购了门票，又邀上了 &lt;a href="https://0xffff.one/" target="_blank" rel="noopener noreferrer"&gt;0xFFFF 社区&lt;/a&gt; 的&lt;a href="https://0xffff.one/u/Chever-John" target="_blank" rel="noopener noreferrer"&gt;@Chever-John&lt;/a&gt;
&lt;a href="https://0xffff.one/u/0xdeadbeef" target="_blank" rel="noopener noreferrer"&gt;@0xdeadbeef&lt;/a&gt; &lt;a href="https://0xffff.one/u/MingLLuo" target="_blank" rel="noopener noreferrer"&gt;@茗洛&lt;/a&gt; 三位朋友一起参加，在香港租了个 airbnb 住宿，期间也逛了香港城市中的不少地方，收获颇丰。&lt;/p&gt;
&lt;blockquote&gt;
 &lt;p&gt;其实本来也尝试过邀请其他认识的朋友同事，但都因为种种原因无法参加，略感遗憾。&lt;/p&gt;
&lt;/blockquote&gt;</description></item><item><title>Kubernetes 集群伸缩组件 - Karpenter</title><link>https://thiscute.world/posts/kubernetes-cluster-autoscaling-1-karpenter/</link><pubDate>Wed, 10 Jul 2024 09:17:31 +0800</pubDate><guid>https://thiscute.world/posts/kubernetes-cluster-autoscaling-1-karpenter/</guid><description>&lt;h2 id="前言" class="headerLink"&gt;
 &lt;a href="#%e5%89%8d%e8%a8%80" class="header-mark"&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Kubernetes 具有非常丰富的动态伸缩能力，这体现在多个层面：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Workloads 的伸缩：通过 Horizontal Pod Autoscaler（HPA）和 Vertical Pod
Autoscaler（VPA）等资源，可以根据资源使用情况自动调整 Pod 的数量和资源配置。
&lt;ul&gt;
&lt;li&gt;相关项目：
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kubernetes-sigs/metrics-server" target="_blank" rel="noopener noreferrer"&gt;metrics-server&lt;/a&gt;: 采集指标数据供
HPA 使用&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kedacore/keda" target="_blank" rel="noopener noreferrer"&gt;KEDA&lt;/a&gt;: 用于支持更多的指标数据源与触发方式&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kubernetes/autoscaler" target="_blank" rel="noopener noreferrer"&gt;kubernetes/autoscaler&lt;/a&gt;: 提供 VPA 功能&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Nodes 的伸缩：根据集群的负载情况，可以自动增加或减少 Nodes 的数量，以适应负载的变化。
&lt;ul&gt;
&lt;li&gt;相关项目：
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kubernetes/autoscaler" target="_blank" rel="noopener noreferrer"&gt;kubernetes/autoscaler&lt;/a&gt;: 目前最流行的
Node 伸缩方案，支持绝大多数云厂商。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kubernetes-sigs/karpenter" target="_blank" rel="noopener noreferrer"&gt;karpenter&lt;/a&gt;: AWS 捐给 CNCF 的一个新兴
Node 伸缩方案，目前仅支持 AWS/Azure，但基于其核心库可以很容易地扩展支持其他云厂商。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;本文主要介绍新兴 Node 伸缩与管理方案 Karpenter 的优势、应用场景及使用方法。&lt;/p&gt;</description></item><item><title>OS as Code - 我的 NixOS 使用体会</title><link>https://thiscute.world/posts/my-experience-of-nixos/</link><pubDate>Wed, 21 Feb 2024 16:26:21 +0800</pubDate><guid>https://thiscute.world/posts/my-experience-of-nixos/</guid><description>&lt;blockquote&gt;
 &lt;p&gt;本文最初发表于 &lt;a href="https://www.zhihu.com/question/56543855/answer/3403111768" target="_blank" rel="noopener noreferrer"&gt;如何评价NixOS? - 知乎&lt;/a&gt;，觉得比较有价值所以再搬运到我的博客。&lt;/p&gt;
&lt;/blockquote&gt;&lt;p&gt;我 23 年 4 月开始用 NixOS 之前看过（&lt;a href="https://www.zhihu.com/question/56543855/answer/3403111768" target="_blank" rel="noopener noreferrer"&gt;如何评价NixOS? - 知乎&lt;/a&gt;） 这个问答，几个高赞回答都从不同方面给出了很有意义的评价，也是吸引我入坑的原因之一。&lt;/p&gt;</description></item><item><title>个人数据安全不完全指南</title><link>https://thiscute.world/posts/an-incomplete-guide-to-data-security/</link><pubDate>Tue, 30 Jan 2024 13:48:30 +0800</pubDate><guid>https://thiscute.world/posts/an-incomplete-guide-to-data-security/</guid><description>&lt;h2 id="零前言" class="headerLink"&gt;
 &lt;a href="#%e9%9b%b6%e5%89%8d%e8%a8%80" class="header-mark"&gt;&lt;/a&gt;零、前言&lt;/h2&gt;&lt;p&gt;在接触电脑以来很长的一段时间里，我都没怎么在意自己的数据安全。比如说：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;长期使用一个没有 passphrase 保护的 SSH 密钥（RSA 2048 位），为了方便我还把它存到了
onedrive 里，而且在各种需要访问 GitHub/Gitee 或 SSH 权限的虚拟机跟 PC 上传来传去。&lt;/li&gt;
&lt;li&gt;Homelab 跟桌面 PC 都从来没开过全盘加密。&lt;/li&gt;
&lt;li&gt;在 2022 年我的 Homelab 坏掉了两块国产固态硬盘（阿斯加特跟光威弈 Pro 各一根），都是系统一启动就挂，没法手动磁盘格式化，走售后直接被京东换货了。因为我的数据是明文存储的，这很可能导致我的个人数据泄露&amp;hellip;&lt;/li&gt;
&lt;li&gt;几个密码在各种站点上重复使用，其中重要账号的随机密码还是我在十多年前用 lastpass 生成的，到处用了这么多年，很难说这些密码有没有泄露（lastpass 近几年爆出的泄漏事故就不少&amp;hellip;）&lt;/li&gt;
&lt;li&gt;GitHub, Google, Jetbrains 等账号的 Backup Code 被我明文存储到了百度云盘，中间发现百度云盘安全性太差又转存到了 OneDrive，但一直是明文存储，从来没加过密。&lt;/li&gt;
&lt;li&gt;一些银行账号之类的随机密码，因为担心遗忘，长期被我保存在一份印象笔记的笔记里，也是明文存储，仅做了些简单的内容替换，要猜出真正的密码感觉并不是很难。&lt;/li&gt;
&lt;li&gt;以前也有过因为对 Git 操作不熟悉或者粗心大意，在公开仓库中提交了一些包含敏感信息的
commit，比如说 SSH 密钥、密码等等，有的甚至很长时间都没发现。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;现在在 IT 行业工作了几年，从我当下的经验来看，企业后台的管理员如果真有兴趣，查看用户的数据真的是很简单的一件事，至少国内大部分公司的用户数据，都不会做非常严格的数据加密与权限管控。就算真有加密，那也很少是用户级别的，对运维人员或开发人员而言这些数据仍旧与未加密无异。对系统做比较大的迭代时，把小部分用户数据导入到测试环境进行测试也是挺常见的做法&amp;hellip;&lt;/p&gt;</description></item><item><title>NixOS 在 Lichee Pi 4A 上是如何启动的</title><link>https://thiscute.world/posts/how-nixos-start-on-licheepi4a/</link><pubDate>Mon, 29 Jan 2024 00:58:57 +0800</pubDate><guid>https://thiscute.world/posts/how-nixos-start-on-licheepi4a/</guid><description>&lt;blockquote&gt;
 &lt;p&gt;文章是 2023-08-07 写的，后面就完全忘掉这回事了，今天偶然翻到它才想起要整理发布下&amp;hellip;所以注意文章中的时间线是 2023 年 8 月。&lt;/p&gt;
&lt;/blockquote&gt;&lt;h2 id="零前言" class="headerLink"&gt;
 &lt;a href="#%e9%9b%b6%e5%89%8d%e8%a8%80" class="header-mark"&gt;&lt;/a&gt;零、前言&lt;/h2&gt;&lt;p&gt;我从今年 5 月份初收到了内测板的 Lichee Pi 4A，这是当下性能最高的 RISC-V 开发板之一，不过当时没怎么折腾。&lt;/p&gt;</description></item><item><title>我的 2023 - 认识更多有趣的人，见识更宽广的世界</title><link>https://thiscute.world/posts/2023-summary/</link><pubDate>Sun, 31 Dec 2023 23:59:45 +0800</pubDate><guid>https://thiscute.world/posts/2023-summary/</guid><description>&lt;h2 id="闲言碎语" class="headerLink"&gt;
 &lt;a href="#%e9%97%b2%e8%a8%80%e7%a2%8e%e8%af%ad" class="header-mark"&gt;&lt;/a&gt;闲言碎语&lt;/h2&gt;&lt;p&gt;啊呀，又到了一年一度的传统节目——年终总结时间。&lt;/p&gt;</description></item><item><title>为什么我折腾这些小众技术？</title><link>https://thiscute.world/posts/why-i-choose-niche-products/</link><pubDate>Tue, 01 Aug 2023 11:40:57 +0800</pubDate><guid>https://thiscute.world/posts/why-i-choose-niche-products/</guid><description>&lt;p&gt;我折腾过许多的小众技术，而今年新折腾的主要有 NixOS、窗口管理器 i3 / hyprland、以及
Neovim，其中 NixOS 我甚至折腾到了一个新境界——出了一本帮助新手入门的中英双语开源书籍&lt;a href="https://github.com/ryan4yin/nixos-and-flakes-book" target="_blank" rel="noopener noreferrer"&gt;nixos-and-flakes-book&lt;/a&gt;，还搞了好几个
NixOS 相关的开源项目（比如&lt;a href="https://github.com/ryan4yin/nix-darwin-kickstarter" target="_blank" rel="noopener noreferrer"&gt;nix-darwin-kickstarter&lt;/a&gt; 跟&lt;a href="https://github.com/ryan4yin/nix-config" target="_blank" rel="noopener noreferrer"&gt;ryan4yin/nix-config&lt;/a&gt;），都收到了许多好评。&lt;/p&gt;
&lt;p&gt;结合我自己折腾这些小众技术的经历，以及我经常被问到的问题（为什么你选择用&lt;a href="nixos.org/" rel=""&gt;NixOS&lt;/a&gt; / &lt;a href="https://github.com/Neovim/Neovim" target="_blank" rel="noopener noreferrer"&gt;Neovim&lt;/a&gt; /&lt;a href="https://flypy.com/" target="_blank" rel="noopener noreferrer"&gt;小鹤音形中文输入法&lt;/a&gt;？它有什么好处？它真的能提升效率吗？等等），我想在这里简单谈谈我对它们的看法。&lt;/p&gt;</description></item><item><title>MacOS 窗口管理器 yabai 玩耍笔记</title><link>https://thiscute.world/posts/macos-window-manager-yabai-usage/</link><pubDate>Mon, 22 May 2023 12:24:57 +0800</pubDate><guid>https://thiscute.world/posts/macos-window-manager-yabai-usage/</guid><description>&lt;blockquote&gt;
 &lt;p&gt;2024-08-30 更新：我已经用 &lt;a href="https://github.com/nikitabobko/AeroSpace" target="_blank" rel="noopener noreferrer"&gt;aerospace&lt;/a&gt; 替代了
yabai + shkd，体验好了太多，而且也不用关掉 SIP 啥的，强烈推荐一用。&lt;/p&gt;
&lt;/blockquote&gt;&lt;blockquote&gt;
 &lt;p&gt;2024-01-28 更新：换了新 Macbook Pro 之后，我又重新把 yabai 装上了，目前体验还不错，比 23
年好了不少。另外我新的配置完全基于 nix-darwin 部署，内容也有些改动，有兴趣的可以看看：&lt;a href="https://github.com/ryan4yin/nix-config/tree/main/modules/darwin/wm" target="_blank" rel="noopener noreferrer"&gt;ryan4yin/nix-config/darwin/wm&lt;/a&gt;
附上 nix-darwin 新手起步模板&lt;a href="https://github.com/ryan4yin/nix-darwin-kickstarter" target="_blank" rel="noopener noreferrer"&gt;ryan4yin/nix-darwin-kickstarter&lt;/a&gt;&lt;/p&gt;</description></item><item><title>NixOS 与 Nix Flakes 新手入门</title><link>https://thiscute.world/posts/nixos-and-flake-basics/</link><pubDate>Thu, 04 May 2023 15:19:28 +0800</pubDate><guid>https://thiscute.world/posts/nixos-and-flake-basics/</guid><description>&lt;p&gt;随着文章的更新，文章内容逐渐增多，为了方便阅读，文章内容已经迁移到单独的站点:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;文档站: &lt;a href="https://nixos-and-flakes.thiscute.world/zh/" target="_blank" rel="noopener noreferrer"&gt;https://nixos-and-flakes.thiscute.world/zh/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GitHub: &lt;a href="https://github.com/ryan4yin/nixos-and-flakes-book" target="_blank" rel="noopener noreferrer"&gt;https://github.com/ryan4yin/nixos-and-flakes-book&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;非常感谢&lt;a href="https://www.reddit.com/r/NixOS/comments/14fvz1q/comment/jp4xhj3/?context=3" target="_blank" rel="noopener noreferrer"&gt;Reddit&lt;/a&gt;、文章评论区、&lt;a href="https://www.v2ex.com/t/951190#reply9" target="_blank" rel="noopener noreferrer"&gt;V2EX&lt;/a&gt; 以及&lt;a href="https://0xffff.one/d/1521-nixos-yu-nix-flakes-xin-shou-ru-men/4" target="_blank" rel="noopener noreferrer"&gt;0xffff.one&lt;/a&gt; 等平台上各位朋友的反馈、批评与建议 ❤️&lt;/p&gt;</description></item><item><title>Linux 上的 WireGuard 网络分析（一）</title><link>https://thiscute.world/posts/wireguard-on-linux/</link><pubDate>Tue, 28 Mar 2023 22:19:25 +0800</pubDate><guid>https://thiscute.world/posts/wireguard-on-linux/</guid><description>&lt;blockquote&gt;
 &lt;p&gt;阅读此文章需要前置知识：Linux 网络基础知识、iptables、conntrack&lt;/p&gt;
&lt;/blockquote&gt;&lt;blockquote&gt;
 &lt;p&gt;本文内容部分采用了 Copilot 提示内容，也有部分内容用了 ChatGPT 免费版进行分析，确实都比较有帮助。&lt;/p&gt;</description></item><item><title>EE 入门（二） - 使用 ESP32 与 SPI 显示屏绘图、显示图片、跑贪吃蛇</title><link>https://thiscute.world/posts/ee-basics-2-esp32-display/</link><pubDate>Sun, 05 Mar 2023 21:57:01 +0800</pubDate><guid>https://thiscute.world/posts/ee-basics-2-esp32-display/</guid><description>&lt;h2 id="零硬件准备与依赖库调研" class="headerLink"&gt;
 &lt;a href="#%e9%9b%b6%e7%a1%ac%e4%bb%b6%e5%87%86%e5%a4%87%e4%b8%8e%e4%be%9d%e8%b5%96%e5%ba%93%e8%b0%83%e7%a0%94" class="header-mark"&gt;&lt;/a&gt;零、硬件准备与依赖库调研&lt;/h2&gt;&lt;p&gt;之前淘货买了挺多显示屏的，本文使用的是这一块：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.lcdwiki.com/3.5inch_SPI_Module_ILI9488_SKU:MSP3520" target="_blank" rel="noopener noreferrer"&gt;3.5 寸电阻触摸屏，480 * 320，SPI 协议，显示屏驱动 IC 为 ILI9488&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;开发板是 ESP-WROOM-32 模组开发板。其他需要的东西：杜邦线、面包板、四个 10 K$\Omega$ 电阻、四个按键。&lt;/p&gt;</description></item><item><title>EE 入门（一） - 电子电路基础知识</title><link>https://thiscute.world/posts/electrical-engineering-circuits-basics-1/</link><pubDate>Tue, 31 Jan 2023 22:33:51 +0800</pubDate><guid>https://thiscute.world/posts/electrical-engineering-circuits-basics-1/</guid><description>&lt;h2 id="前言" class="headerLink"&gt;
 &lt;a href="#%e5%89%8d%e8%a8%80" class="header-mark"&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;我是从去年 12 月开始玩电子的，起因是 11 月搞了个 Homelab，然后就一路玩到 ESPHome，买了一堆传感器。玩了一阵后 ESPHome 这种小白式玩法就满足不了我了，于是开始学习电路知识，用树莓派跟其他单片机开始折腾遥控小车、简易机械臂、跑马灯等等，可以说是玩得很尽兴。&lt;/p&gt;</description></item><item><title>2022 年年终总结</title><link>https://thiscute.world/posts/2022-summary/</link><pubDate>Mon, 02 Jan 2023 18:00:45 +0800</pubDate><guid>https://thiscute.world/posts/2022-summary/</guid><description>&lt;h2 id="闲言碎语" class="headerLink"&gt;
 &lt;a href="#%e9%97%b2%e8%a8%80%e7%a2%8e%e8%af%ad" class="header-mark"&gt;&lt;/a&gt;闲言碎语&lt;/h2&gt;&lt;p&gt;是的又过去一年，又到了一年一度的传统节目——年终总结时间。&lt;/p&gt;</description></item><item><title>Proxmox Virtual Environment 使用指南</title><link>https://thiscute.world/posts/proxmox-virtual-environment-instruction/</link><pubDate>Sun, 27 Nov 2022 22:38:03 +0800</pubDate><guid>https://thiscute.world/posts/proxmox-virtual-environment-instruction/</guid><description>&lt;blockquote&gt;
 &lt;p&gt;本文介绍我使用 PVE 的一些心得（不保证正确 emmmm），可能需要一定使用经验才能顺畅阅读。&lt;/p&gt;
&lt;/blockquote&gt;&lt;h2 id="前言" class="headerLink"&gt;
 &lt;a href="#%e5%89%8d%e8%a8%80" class="header-mark"&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;我在去年的文章 &lt;a href="./qemu-kvm-usage/" rel=""&gt;「QEMU/KVM 虚拟化环境的搭建与使用」&lt;/a&gt; 中介绍了如何使用
QEMU/KVM 作为桌面虚拟化软件，其功能对标开源免费的&lt;a href="https://www.virtualbox.org/" target="_blank" rel="noopener noreferrer"&gt;Oracle VM VirtualBox&lt;/a&gt; 以及收费但是用户众多的&lt;a href="https://www.vmware.com/products/workstation-pro.html" target="_blank" rel="noopener noreferrer"&gt;VMware Workstation Pro&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>分布式数据库的一致性问题与共识算法</title><link>https://thiscute.world/posts/consistency-and-consensus-algorithm/</link><pubDate>Sun, 07 Aug 2022 04:11:23 +0800</pubDate><guid>https://thiscute.world/posts/consistency-and-consensus-algorithm/</guid><description>&lt;blockquote&gt;
 &lt;p&gt;个人笔记，不保证正确！&lt;/p&gt;
&lt;/blockquote&gt;&lt;p&gt;谈到分布式数据库，不论是 Etcd/Zookeeper 这样的中心化分布式数据库，还是 Ethereum 区块链这样的去中心化数据库，都避免不了两个关键词：「&lt;strong&gt;一致性&lt;/strong&gt;」跟「&lt;strong&gt;共识&lt;/strong&gt;」。&lt;/p&gt;</description></item><item><title>Kubernetes 中的证书管理工具 - cert-manager</title><link>https://thiscute.world/posts/kubernetes-cert-management/</link><pubDate>Sun, 31 Jul 2022 15:11:46 +0800</pubDate><guid>https://thiscute.world/posts/kubernetes-cert-management/</guid><description>&lt;p&gt;我在之前的文章&lt;a href="https://thiscute.world/posts/about-tls-cert/" target="_blank" rel="noopener noreferrer"&gt;写给开发人员的实用密码学（八）—— 数字证书与 TLS 协议&lt;/a&gt;
中，介绍了如何使用 openssl 生成与管理各种用途的数字证书，也简单介绍了如何通过 certbot 等工具与 ACME 证书申请与管理协议，进行数字证书的申请与自动更新（autorenew）。&lt;/p&gt;</description></item><item><title>NAT 网关、NAT 穿越以及虚拟网络</title><link>https://thiscute.world/posts/about-nat/</link><pubDate>Fri, 13 May 2022 11:46:00 +0800</pubDate><guid>https://thiscute.world/posts/about-nat/</guid><description>&lt;blockquote&gt;
 &lt;p&gt;个人笔记，不一定正确&amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;&lt;blockquote&gt;
 &lt;p&gt;当前文章完成度 - 70%&lt;/p&gt;
&lt;/blockquote&gt;&lt;h2 id="前言" class="headerLink"&gt;
 &lt;a href="#%e5%89%8d%e8%a8%80" class="header-mark"&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;NAT，即 Network Address Translation，是 IPv4 网络中非常重要的一个功能，用于执行 IP 地址与端口的转换。&lt;/p&gt;</description></item><item><title>FinOps for Kubernetes - 如何拆分 Kubernetes 成本</title><link>https://thiscute.world/posts/finops-for-kubernetes/</link><pubDate>Wed, 04 May 2022 23:15:00 +0800</pubDate><guid>https://thiscute.world/posts/finops-for-kubernetes/</guid><description>&lt;blockquote&gt;
 &lt;p&gt;FinOps 是一种不断发展的云财务管理学科和文化实践，通过帮助工程、财务、技术和业务团队在数据驱动的预算分配上进行协作，使成本预算能够产生最大的业务价值。&lt;/p&gt;</description></item><item><title>变革与创新</title><link>https://thiscute.world/posts/revolution-and-innovation/</link><pubDate>Mon, 28 Mar 2022 00:40:00 +0800</pubDate><guid>https://thiscute.world/posts/revolution-and-innovation/</guid><description>&lt;p&gt;最近在学区块链技术，跟群友讨论时，一位群友抛出了他的观点：「所以智能合约，本质上依然是一个特殊的协议吧，只是套上了一个看起来高大上的词语而本质依然属于一种通信协议的东西，这么一想如果拆解开来实际上也应该没什么特别的。」&lt;/p&gt;</description></item><item><title>写给开发人员的实用密码学（八）—— 数字证书与 TLS 协议</title><link>https://thiscute.world/posts/about-tls-cert/</link><pubDate>Mon, 14 Mar 2022 00:00:00 +0800</pubDate><guid>https://thiscute.world/posts/about-tls-cert/</guid><description>&lt;blockquote&gt;
 &lt;p&gt;本文大致是一篇原创文章，但是参考了许多网络资料，都列在文末的「参考」中了。&lt;/p&gt;
&lt;/blockquote&gt;&lt;h2 id="更新记录" class="headerLink"&gt;
 &lt;a href="#%e6%9b%b4%e6%96%b0%e8%ae%b0%e5%bd%95" class="header-mark"&gt;&lt;/a&gt;更新记录&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;2021-01-17&lt;/strong&gt;: 完成 TLS 协议简介、数字证书介绍、数字证书的申请或生成方法、mTLS 介绍、TLS 协议的破解手段&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2022-03-13&lt;/strong&gt; ~ &lt;strong&gt;2022-03-14&lt;/strong&gt;: 重新整理补充，改写为《写给开发人员的实用密码学（八）——
数字证书与 TLS 协议》，整合进我的实用密码学系列文章中
&lt;ul&gt;
&lt;li&gt;补充 PKI 公钥基础架构及 X509 证书标准介绍&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;TODO:
&lt;ul&gt;
&lt;li&gt;补充 ALPN 应用层协议协商的介绍&lt;/li&gt;
&lt;li&gt;补充 TLS 协议的逆向手段&lt;/li&gt;
&lt;li&gt;基于&lt;a href="https://shoujo.ink/2021/11/cfssl-%E6%A0%B8%E5%BF%83%E6%A8%A1%E5%9D%97%E5%88%86%E6%9E%90/" target="_blank" rel="noopener noreferrer"&gt;cfssl&lt;/a&gt;
详细介绍 PKI 的各项组件&lt;/li&gt;
&lt;li&gt;基于 PKI 的应用服务间身份识别技术：&lt;a href="https://github.com/spiffe/spiffe" target="_blank" rel="noopener noreferrer"&gt;SPIFF ID&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;SPIFF ID 是云原生领域的标准，&lt;a href="https://shoujo.ink/2021/10/istio-%E5%AE%89%E5%85%A8%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8B-pki-%E4%B8%8E%E9%80%9A%E4%BF%A1%E5%AE%89%E5%85%A8/" target="_blank" rel="noopener noreferrer"&gt;服务网格项目 Istio 就使用了 SPIFF ID 作为安全命名&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id="preface" class="headerLink"&gt;
 &lt;a href="#preface" class="header-mark"&gt;&lt;/a&gt;零、前言&lt;/h2&gt;&lt;p&gt;现代人的日常生活中，HTTPS 协议几乎无处不在，我们每天浏览网页时、用手机刷京东淘宝时、甚至每天秀自己绿色的健康码时，都在使用 HTTPS 协议。&lt;/p&gt;</description></item><item><title>写给开发人员的实用密码学（七）—— 非对称密钥加密算法 RSA/ECC</title><link>https://thiscute.world/posts/practical-cryptography-basics-7-asymmetric-key-ciphers/</link><pubDate>Wed, 09 Mar 2022 20:50:00 +0800</pubDate><guid>https://thiscute.world/posts/practical-cryptography-basics-7-asymmetric-key-ciphers/</guid><description>&lt;blockquote&gt;
 &lt;p&gt;本文部分内容翻译自 &lt;a href="https://github.com/nakov/Practical-Cryptography-for-Developers-Book" target="_blank" rel="noopener noreferrer"&gt;Practical-Cryptography-for-Developers-Book&lt;/a&gt;，笔者补充了密码学历史以及 openssl 命令示例，并重写了 RSA/ECC 算法原理、代码示例等内容。&lt;/p&gt;</description></item><item><title>写给开发人员的实用密码学（六）—— 对称密钥加密算法</title><link>https://thiscute.world/posts/practical-cryptography-basics-6-symmetric-key-ciphers/</link><pubDate>Sun, 06 Mar 2022 18:44:00 +0800</pubDate><guid>https://thiscute.world/posts/practical-cryptography-basics-6-symmetric-key-ciphers/</guid><description>&lt;blockquote&gt;
 &lt;p&gt;本文主要翻译自 &lt;a href="https://github.com/nakov/Practical-Cryptography-for-Developers-Book" target="_blank" rel="noopener noreferrer"&gt;Practical-Cryptography-for-Developers-Book&lt;/a&gt;，笔者补充了部分代码示例。&lt;/p&gt;</description></item><item><title>写给开发人员的实用密码学（五）—— 密钥交换 DHKE 与完美前向保密 PFS</title><link>https://thiscute.world/posts/practical-cryptography-basics-5-key-exchange/</link><pubDate>Tue, 01 Mar 2022 17:15:05 +0800</pubDate><guid>https://thiscute.world/posts/practical-cryptography-basics-5-key-exchange/</guid><description>&lt;blockquote&gt;
 &lt;p&gt;本文主要翻译自 &lt;a href="https://github.com/nakov/Practical-Cryptography-for-Developers-Book" target="_blank" rel="noopener noreferrer"&gt;Practical-Cryptography-for-Developers-Book&lt;/a&gt;，笔者额外补充了
DHKE/ECDH 的代码示例，以及「PFS 完美前向保密协议 DHE/ECDHE」一节。&lt;/p&gt;</description></item><item><title>写给开发人员的实用密码学（四）—— 安全随机数生成器 CSPRNG</title><link>https://thiscute.world/posts/practical-cryptography-basics-4-secure-random-generators/</link><pubDate>Tue, 01 Mar 2022 17:15:04 +0800</pubDate><guid>https://thiscute.world/posts/practical-cryptography-basics-4-secure-random-generators/</guid><description>&lt;blockquote&gt;
 &lt;p&gt;本文主要翻译自 &lt;a href="https://github.com/nakov/Practical-Cryptography-for-Developers-Book" target="_blank" rel="noopener noreferrer"&gt;Practical-Cryptography-for-Developers-Book&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;&lt;h2 id="一前言" class="headerLink"&gt;
 &lt;a href="#%e4%b8%80%e5%89%8d%e8%a8%80" class="header-mark"&gt;&lt;/a&gt;一、前言&lt;/h2&gt;&lt;p&gt;在密码学中，随机性（熵）扮演了一个非常重要的角色，许多密码学算法都要求使用一个不可预测的随机数，只有在生成的随机数不可预测时，这些算法才能保证其安全性。&lt;/p&gt;
&lt;p&gt;比如 MAC 算法中的 key 就必须是一个不可预测的值，在这个条件下 MAC 值才是不可伪造的。&lt;/p&gt;
&lt;p&gt;另外许多的高性能算法如快速排序、布隆过滤器、蒙特卡洛方法等，都依赖于随机性，如果随机性可以被预测，或者能够找到特定的输入值使这些算法变得特别慢，那黑客就能借此对服务进行 DDoS 攻击，
以很小的成本达到让服务不可用的目的。&lt;/p&gt;</description></item><item><title>写给开发人员的实用密码学（三）—— MAC 与密钥派生函数 KDF</title><link>https://thiscute.world/posts/practical-cryptography-basics-3-key-derivation-function/</link><pubDate>Tue, 01 Mar 2022 17:15:03 +0800</pubDate><guid>https://thiscute.world/posts/practical-cryptography-basics-3-key-derivation-function/</guid><description>&lt;blockquote&gt;
 &lt;p&gt;本文主要翻译自 &lt;a href="https://github.com/nakov/Practical-Cryptography-for-Developers-Book" target="_blank" rel="noopener noreferrer"&gt;Practical-Cryptography-for-Developers-Book&lt;/a&gt;，笔者补充了 HMAC
的 Python 实现以及 scrypt 使用示例。&lt;/p&gt;</description></item><item><title>写给开发人员的实用密码学（二）—— 哈希函数</title><link>https://thiscute.world/posts/practical-cryptography-basics-2-hash/</link><pubDate>Tue, 01 Mar 2022 17:15:01 +0800</pubDate><guid>https://thiscute.world/posts/practical-cryptography-basics-2-hash/</guid><description>&lt;blockquote&gt;
 &lt;p&gt;本文主要翻译自 &lt;a href="https://github.com/nakov/Practical-Cryptography-for-Developers-Book" target="_blank" rel="noopener noreferrer"&gt;Practical-Cryptography-for-Developers-Book&lt;/a&gt;，笔者额外补充了「非加密哈希函数」的简单介绍。&lt;/p&gt;</description></item><item><title>写给开发人员的实用密码学（一）—— 概览</title><link>https://thiscute.world/posts/practical-cryptography-basics-1/</link><pubDate>Tue, 01 Mar 2022 17:15:00 +0800</pubDate><guid>https://thiscute.world/posts/practical-cryptography-basics-1/</guid><description>&lt;blockquote&gt;
 &lt;p&gt;本文主要翻译自 &lt;a href="https://github.com/nakov/Practical-Cryptography-for-Developers-Book" target="_blank" rel="noopener noreferrer"&gt;Practical-Cryptography-for-Developers-Book&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;&lt;h2 id="零前言" class="headerLink"&gt;
 &lt;a href="#%e9%9b%b6%e5%89%8d%e8%a8%80" class="header-mark"&gt;&lt;/a&gt;零、前言&lt;/h2&gt;&lt;p&gt;你是软件开发人员吗？有时你会需要在日常工作中使用哈希、加密或数字签名等密码学工具吗？你认为密码学很复杂，充满了数学知识，而且只适合书呆子吗？不，不是这样滴，每个开发人员都可以学习如何使用加密算法。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;从开发人员的角度理解密码学概念&lt;/strong&gt;不需要你是一个厉害的数学家。这个系列的文章将尽量以最浅显的方式教你&lt;strong&gt;应用密码学&lt;/strong&gt;的基础知识，而且包含大量循序渐进的代码示例和实践练习——就像你学习
Web 开发、数据库或 APP 开发一样。&lt;/p&gt;</description></item><item><title>Linux/Windows/MacOSX 系统常用命令集锦</title><link>https://thiscute.world/posts/common-commands-for-various-operating-systems/</link><pubDate>Sun, 13 Feb 2022 16:09:00 +0800</pubDate><guid>https://thiscute.world/posts/common-commands-for-various-operating-systems/</guid><description>&lt;blockquote&gt;
 &lt;p&gt;个人笔记，只会列出我自己容易忘掉的命令，方便查阅。&lt;/p&gt;
&lt;/blockquote&gt;&lt;blockquote&gt;
 &lt;p&gt;内容比较多，适合当参考手册用。可能不太适合从头读到尾&amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;&lt;blockquote&gt;
 &lt;p&gt;本文主要介绍 Linux 命令，顺带介绍下 Windows/MacOSX.&lt;/p&gt;</description></item><item><title>Python 实用技巧与常见错误集锦</title><link>https://thiscute.world/posts/python-tips-and-tricks/</link><pubDate>Sun, 13 Feb 2022 01:17:00 +0800</pubDate><guid>https://thiscute.world/posts/python-tips-and-tricks/</guid><description>&lt;blockquote&gt;
 &lt;p&gt;个人笔记，不保证正确。&lt;/p&gt;
&lt;/blockquote&gt;&lt;blockquote&gt;
 &lt;p&gt;内容比较多，建议参照目录浏览。&lt;/p&gt;
&lt;/blockquote&gt;&lt;h2 id="一标准库" class="headerLink"&gt;
 &lt;a href="#%e4%b8%80%e6%a0%87%e5%87%86%e5%ba%93" class="header-mark"&gt;&lt;/a&gt;一、标准库&lt;/h2&gt;&lt;h3 id="1-文件路径---pathlib" class="headerLink"&gt;
 &lt;a href="#1-%e6%96%87%e4%bb%b6%e8%b7%af%e5%be%84---pathlib" class="header-mark"&gt;&lt;/a&gt;1. 文件路径 - pathlib&lt;/h3&gt;&lt;p&gt;提供了 OS 无关的文件路径抽象，可以完全替代旧的 &lt;code&gt;os.path&lt;/code&gt; 和 &lt;code&gt;glob&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;学会了 &lt;code&gt;pathlib.Path&lt;/code&gt;，你就会了 Python 处理文件路径的所有功能。&lt;/p&gt;</description></item><item><title>部署一个 Kubernetes 集群</title><link>https://thiscute.world/posts/kubernetes-deployment-using-kubeadm/</link><pubDate>Tue, 25 Jan 2022 01:37:00 +0800</pubDate><guid>https://thiscute.world/posts/kubernetes-deployment-using-kubeadm/</guid><description>&lt;blockquote&gt;
 &lt;p&gt;本文完成于 2022-01-25，其中部分内容已经过时，仅供参考。&lt;/p&gt;
&lt;/blockquote&gt;&lt;blockquote&gt;
 &lt;p&gt;本文由个人笔记&lt;a href="https://github.com/ryan4yin/knowledge/tree/master/kubernetes" target="_blank" rel="noopener noreferrer"&gt;ryan4yin/knowledge&lt;/a&gt; 整理而来，不保证正确&lt;/p&gt;
&lt;/blockquote&gt;&lt;h2 id="本地-kubernetes-集群安装工具" class="headerLink"&gt;
 &lt;a href="#%e6%9c%ac%e5%9c%b0-kubernetes-%e9%9b%86%e7%be%a4%e5%ae%89%e8%a3%85%e5%b7%a5%e5%85%b7" class="header-mark"&gt;&lt;/a&gt;本地 Kubernetes 集群安装工具&lt;/h2&gt;&lt;blockquote&gt;
 &lt;p&gt;云上的 Kubernetes 集群，基本上各云厂商都支持一键部署。这里主要关注本地部署，或者叫做裸机
(baremetal)部署&lt;/p&gt;</description></item><item><title>Kubernetes 微服务最佳实践</title><link>https://thiscute.world/posts/kubernetes-best-practices/</link><pubDate>Tue, 25 Jan 2022 00:13:00 +0800</pubDate><guid>https://thiscute.world/posts/kubernetes-best-practices/</guid><description>&lt;blockquote&gt;
 &lt;p&gt;本文由个人笔记&lt;a href="https://github.com/ryan4yin/knowledge/tree/master/kubernetes" target="_blank" rel="noopener noreferrer"&gt;ryan4yin/knowledge&lt;/a&gt; 整理而来&lt;/p&gt;
&lt;/blockquote&gt;&lt;p&gt;本文主要介绍我个人在使用 Kubernetes 的过程中，总结出的一套「Kubernetes 配置」，是我个人的「最佳实践」。其中大部分内容都经历过线上环境的考验，但是也有少部分还只在我脑子里模拟过，请谨慎参考。&lt;/p&gt;</description></item><item><title>2021 年年终总结</title><link>https://thiscute.world/posts/2021-summary/</link><pubDate>Mon, 03 Jan 2022 14:50:00 +0800</pubDate><guid>https://thiscute.world/posts/2021-summary/</guid><description>&lt;blockquote&gt;
 &lt;p&gt;更新：2022/1/22&lt;/p&gt;
&lt;/blockquote&gt;&lt;h2 id="闲言碎语" class="headerLink"&gt;
 &lt;a href="#%e9%97%b2%e8%a8%80%e7%a2%8e%e8%af%ad" class="header-mark"&gt;&lt;/a&gt;闲言碎语&lt;/h2&gt;&lt;p&gt;一晃一年又是过去了，这个新年，全球疫情再创新高，圣诞节后美国单日新增更是直接突破 &lt;del&gt;50 万直逼 60 万大关❌&lt;/del&gt; &lt;strong&gt;100 万✅&lt;/strong&gt;，国内也有西安管理不力导致民众忍饥挨饿。&lt;/p&gt;
&lt;p&gt;新冠已经两年多了啊。&lt;/p&gt;
&lt;p&gt;言归正传，我今年年初从 W 公司离职后，非常幸运地进了现在的公司——大宇无限，在融入大宇的过程中也是五味杂陈。不过总体结果还是挺满意的，目前工作已经步入正轨，也发现了非常多的机会，大宇的基础设施领域仍然大有可为。&lt;/p&gt;</description></item><item><title>iptables 及 docker 容器网络分析</title><link>https://thiscute.world/posts/iptables-and-container-networks/</link><pubDate>Sun, 15 Aug 2021 19:11:29 +0800</pubDate><guid>https://thiscute.world/posts/iptables-and-container-networks/</guid><description>&lt;blockquote&gt;
 &lt;p&gt;本文仅针对 ipv4 网络&lt;/p&gt;
&lt;/blockquote&gt;&lt;p&gt;本文先介绍 iptables 的基本概念及常用命令，然后分析 docker/podman 是如何利用 iptables 和
Linux 虚拟网络接口实现的单机容器网络。&lt;/p&gt;
&lt;h2 id="一iptables" class="headerLink"&gt;
 &lt;a href="#%e4%b8%80iptables" class="header-mark"&gt;&lt;/a&gt;一、iptables&lt;/h2&gt;&lt;p&gt;&lt;a href="https://www.netfilter.org/projects/iptables/index.html" target="_blank" rel="noopener noreferrer"&gt;iptables&lt;/a&gt; 提供了包过滤、NAT 以及其他的包处理能力，iptables 应用最多的两个场景是 firewall 和 NAT&lt;/p&gt;</description></item><item><title>Linux 中的虚拟网络接口</title><link>https://thiscute.world/posts/linux-virtual-network-interfaces/</link><pubDate>Sat, 14 Aug 2021 11:13:03 +0800</pubDate><guid>https://thiscute.world/posts/linux-virtual-network-interfaces/</guid><description>&lt;blockquote&gt;
 &lt;p&gt;本文用到的字符画工具：&lt;a href="https://github.com/zenghongtu/vscode-asciiflow2" target="_blank" rel="noopener noreferrer"&gt;vscode-asciiflow2&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;&lt;blockquote&gt;
 &lt;p&gt;注意: 本文中使用 &lt;code&gt;ip&lt;/code&gt; 命令创建或修改的任何网络配置，都是未持久化的，主机重启即消失。&lt;/p&gt;
&lt;/blockquote&gt;&lt;p&gt;Linux 具有强大的虚拟网络能力，这也是 openstack 网络、docker 容器网络以及 kubernetes 网络等虚拟网络的基础。&lt;/p&gt;</description></item><item><title>Linux 网络工具中的瑞士军刀 - socat &amp; netcat</title><link>https://thiscute.world/posts/socat-netcat/</link><pubDate>Sun, 11 Apr 2021 16:38:13 +0800</pubDate><guid>https://thiscute.world/posts/socat-netcat/</guid><description>&lt;blockquote&gt;
 &lt;p&gt;文中的命令均在 macOS Big Sure 和 openSUSE Tumbleweed 上测试通过&lt;/p&gt;
&lt;/blockquote&gt;&lt;h2 id="socat--netcat" class="headerLink"&gt;
 &lt;a href="#socat--netcat" class="header-mark"&gt;&lt;/a&gt;socat &amp;amp; netcat&lt;/h2&gt;&lt;p&gt;netcat(network cat) 是一个历史悠久的网络工具包，被称作 TCP/IP 的瑞士军刀，各大 Linux 发行版都有默认安装 openbsd 版本的 netcat，它的命令行名称为 &lt;code&gt;nc&lt;/code&gt;.&lt;/p&gt;</description></item><item><title>云原生流水线 Argo Workflows 的安装、使用以及个人体验</title><link>https://thiscute.world/posts/experience-of-argo-workflows/</link><pubDate>Wed, 27 Jan 2021 15:37:27 +0800</pubDate><guid>https://thiscute.world/posts/experience-of-argo-workflows/</guid><description>&lt;blockquote&gt;
 &lt;p&gt;注意：这篇文章并不是一篇入门教程，学习 Argo Workflows 请移步官方文档&lt;a href="https://argoproj.github.io/argo-workflows/" target="_blank" rel="noopener noreferrer"&gt;Argo Documentation&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;&lt;p&gt;&lt;a href="https://github.com/argoproj/argo-workflows/" target="_blank" rel="noopener noreferrer"&gt;Argo Workflows&lt;/a&gt; 是一个云原生工作流引擎，专注于&lt;strong&gt;编排并行任务&lt;/strong&gt;。它的特点如下：&lt;/p&gt;</description></item><item><title>secrets 管理工具 Vault 的介绍、安装及使用</title><link>https://thiscute.world/posts/experience-of-vault/</link><pubDate>Sun, 24 Jan 2021 09:31:41 +0800</pubDate><guid>https://thiscute.world/posts/experience-of-vault/</guid><description>&lt;p&gt;&lt;a href="https://github.com/hashicorp/vault" target="_blank" rel="noopener noreferrer"&gt;Vault&lt;/a&gt; 是 hashicorp 推出的 secrets 管理、加密即服务与权限管理工具。它的功能简介如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;secrets 管理：支持保存各种自定义信息、自动生成各类密钥，vault 自动生成的密钥还能自动轮转(rotate)&lt;/li&gt;
&lt;li&gt;认证方式：支持接入各大云厂商的账号体系（比如阿里云RAM子账号体系）或者 LDAP 等进行身份验证，不需要创建额外的账号体系。&lt;/li&gt;
&lt;li&gt;权限管理：通过 policy，可以设定非常细致的 ACL 权限。&lt;/li&gt;
&lt;li&gt;密钥引擎：也支持接管各大云厂商的账号体系（比如阿里云RAM子账号体系），实现 API Key 的自动轮转。&lt;/li&gt;
&lt;li&gt;支持接入 kubernetes rbac 认证体系，通过 serviceaccount+role 为每个 Pod 单独配置认证角色。&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;支持通过 sidecar/init-container 将 secrets 注入到 pod 中，或者通过 k8s operator 将 vault
数据同步到 k8s secrets 中&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在使用 Vault 之前，我们是以携程开源的 &lt;a href="https://github.com/ctripcorp/apollo" target="_blank" rel="noopener noreferrer"&gt;Apollo&lt;/a&gt; 作为微服务的分布式配置中心。&lt;/p&gt;</description></item><item><title>QEMU/KVM 虚拟化环境的搭建与使用</title><link>https://thiscute.world/posts/qemu-kvm-usage/</link><pubDate>Sun, 17 Jan 2021 21:34:04 +0800</pubDate><guid>https://thiscute.world/posts/qemu-kvm-usage/</guid><description>&lt;h2 id="qemukvm-虚拟化" class="headerLink"&gt;
 &lt;a href="#qemukvm-%e8%99%9a%e6%8b%9f%e5%8c%96" class="header-mark"&gt;&lt;/a&gt;QEMU/KVM 虚拟化&lt;/h2&gt;&lt;blockquote&gt;
 &lt;p&gt;QEMU/KVM 有一定的使用门槛，本文假设你已经拥有基础的虚拟化相关知识，最好是已经有
virtualbox 或 vmware workstation 的使用经验。&lt;/p&gt;
&lt;/blockquote&gt;&lt;h2 id="前言" class="headerLink"&gt;
 &lt;a href="#%e5%89%8d%e8%a8%80" class="header-mark"&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;虚拟机（Virtual Machine）是指通过软件模拟的具有完整硬件系统功能的、运行在一个完全隔离环境中的完整计算机系统。它的主要用途有：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;测试、尝鲜新的操作系统。&lt;/li&gt;
&lt;li&gt;快速创建完全隔离的沙箱环境，用于运行某些不安全的或者敏感的文件/程序。&lt;/li&gt;
&lt;li&gt;云服务商或企业会通过服务器虚拟化，提升服务器的利用率。&lt;/li&gt;
&lt;li&gt;虚拟机可以创建快照跟备份，系统环境可以随时还原到旧的快照，也能方便地拷贝给他人。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;而 QEMU/KVM 则是目前最流行的企业级虚拟化技术，它基于 Linux 内核提供的 KVM 模块，结构精简，
性能损失小，而且开源免费，因此成了大部分企业的首选虚拟化方案。&lt;/p&gt;
&lt;p&gt;目前各大云厂商的虚拟化方案，新的服务器实例基本都是用的 KVM 技术。即使是起步最早，一直重度使用 Xen 的 AWS，从 EC2 C5 开始就改用了基于 KVM 定制的 Nitro 虚拟化技术。&lt;/p&gt;
&lt;p&gt;但是 KVM 作为一个企业级的底层虚拟化技术，却没有对桌面使用做深入的优化，因此如果想把它当成桌面虚拟化软件来使用，替代掉&lt;a href="https://www.virtualbox.org/" target="_blank" rel="noopener noreferrer"&gt;VirtualBox&lt;/a&gt;/&lt;a href="https://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.html" target="_blank" rel="noopener noreferrer"&gt;VMware Workstation&lt;/a&gt;，
有一定难度。&lt;/p&gt;</description></item><item><title>Pulumi 使用体验 - 基础设施代码化</title><link>https://thiscute.world/posts/experience-of-pulumi/</link><pubDate>Fri, 08 Jan 2021 18:51:30 +0800</pubDate><guid>https://thiscute.world/posts/experience-of-pulumi/</guid><description>&lt;p&gt;&lt;a href="https://github.com/pulumi/pulumi" target="_blank" rel="noopener noreferrer"&gt;Pulumi&lt;/a&gt; 是一个基础设施的自动管理工具，使用
Python/TypeScript/Go/Dotnet 编写好声明式的资源配置，就能实现一键创建/修改/销毁各类资源，这里的资源可以是：&lt;/p&gt;</description></item><item><title>openSUSE 使用指南</title><link>https://thiscute.world/posts/opensuse-instruction/</link><pubDate>Mon, 04 Jan 2021 08:42:21 +0800</pubDate><guid>https://thiscute.world/posts/opensuse-instruction/</guid><description>&lt;p&gt;openSUSE 是一个基于 RPM 的发行版，这和 RHEL/CentOS 一致。但是它的官方包管理器是专有的
zypper，挺好用的，软件也很新。&lt;/p&gt;
&lt;p&gt;我最近从 &lt;a href="https://thiscute.world/posts/manjaro-instruction/" rel=""&gt;Manjaro&lt;/a&gt; 切换到了 openSUSE，发现 KDE 桌面确实比
Manjaro 更丝滑，而且社区源 OBS 体验下来比 AUR 更舒服。&lt;/p&gt;</description></item><item><title>2020 年年终总结</title><link>https://thiscute.world/posts/2020-summary/</link><pubDate>Sat, 12 Dec 2020 23:45:00 +0800</pubDate><guid>https://thiscute.world/posts/2020-summary/</guid><description>&lt;h2 id="闲言碎语" class="headerLink"&gt;
 &lt;a href="#%e9%97%b2%e8%a8%80%e7%a2%8e%e8%af%ad" class="header-mark"&gt;&lt;/a&gt;闲言碎语&lt;/h2&gt;&lt;p&gt;一晃一年又过去了，今年可真是魔幻的一年，口罩带了一年没能摘下来，美国疫情感染人数 1500 万。&lt;/p&gt;
&lt;p&gt;上面这段话要是让去年的我看到了，没准都以为今年真的生化危机了hhh&amp;hellip;&lt;/p&gt;
&lt;p&gt;言归正传，从去年 6 月底入职，到现在有一年半了，这一年半学到的东西真的非常多，完全重塑了我的技术栈。现在我的整个技术栈，基本都是围绕着云原生这一块发展了。&lt;/p&gt;</description></item><item><title>Base64 编码并不唯一</title><link>https://thiscute.world/posts/base64-encoding-is-not-unique/</link><pubDate>Sun, 31 May 2020 00:13:00 +0800</pubDate><guid>https://thiscute.world/posts/base64-encoding-is-not-unique/</guid><description>&lt;blockquote&gt;
 &lt;p&gt;个人笔记，不保证正确&lt;/p&gt;
&lt;/blockquote&gt;&lt;h1 id="问题" class="headerLink"&gt;
 &lt;a href="#%e9%97%ae%e9%a2%98" class="header-mark"&gt;&lt;/a&gt;问题&lt;/h1&gt;&lt;p&gt;我以前只知道 Base64 这个编码算法很常用，自己也经常在 JWT 等场景下使用，但是从来没了解过它的原理，一直先入为主地认为它的编码应该是唯一的。&lt;/p&gt;
&lt;p&gt;但是今天测试 JWT 时，发现修改 JWT 的最后一个字符（其实不是我发现的。。），居然有可能不影响
JWT 的正确性。比如下这个使用 HS256 算法的 JWT:&lt;/p&gt;</description></item><item><title>使用 tcpdump 和 Wireshark 进行远程实时抓包分析</title><link>https://thiscute.world/posts/tcpdump-and-wireshark/</link><pubDate>Thu, 28 May 2020 16:20:26 +0800</pubDate><guid>https://thiscute.world/posts/tcpdump-and-wireshark/</guid><description>&lt;h1 id="抓包分析" class="headerLink"&gt;
 &lt;a href="#%e6%8a%93%e5%8c%85%e5%88%86%e6%9e%90" class="header-mark"&gt;&lt;/a&gt;抓包分析&lt;/h1&gt;&lt;p&gt;抓包分析工具主要有两种：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;http/https 网络代理工具：&lt;a href="https://github.com/mitmproxy/mitmproxy" target="_blank" rel="noopener noreferrer"&gt;mitmproxy&lt;/a&gt;/fiddler 都属于这一类，用于分析 http 非常方便。但是只支持 http/https，有局限性。&lt;/li&gt;
&lt;li&gt;tcp/udp/icmp 等网络嗅探工具：tcpdump/tshark 都属于这一类，网络故障分析等场景常用。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这里主要介绍如何使用 tcpdump + wireshark 进行远程实时抓包分析。而 mitmproxy 抓包和
wireshark 本地抓包都相当简单，就不介绍了。&lt;/p&gt;</description></item><item><title>使用 Istio 进行 JWT 身份验证（充当 API 网关）</title><link>https://thiscute.world/posts/use-istio-for-jwt-auth/</link><pubDate>Mon, 06 Apr 2020 21:48:26 +0800</pubDate><guid>https://thiscute.world/posts/use-istio-for-jwt-auth/</guid><description>&lt;blockquote&gt;
 &lt;p&gt;本文基于 Istio1.5 编写测试&lt;/p&gt;
&lt;/blockquote&gt;&lt;p&gt;Istio 支持使用 JWT 对终端用户进行身份验证（Istio End User Authentication），支持多种 JWT
签名算法。&lt;/p&gt;
&lt;p&gt;目前主流的 JWT 算法是 RS256/ES256。（请忽略 HS256，该算法不适合分布式 JWT 验证）&lt;/p&gt;
&lt;p&gt;这里以 RSA256 算法为例进行介绍，ES256 的配置方式也是一样的。&lt;/p&gt;</description></item><item><title>Linux网络学习笔记（二）：域名解析(DNS)——以 CoreDNS 为例</title><link>https://thiscute.world/posts/about-dns-protocol/</link><pubDate>Sun, 29 Mar 2020 15:49:23 +0800</pubDate><guid>https://thiscute.world/posts/about-dns-protocol/</guid><description>&lt;blockquote&gt;
 &lt;p&gt;个人笔记，观点不一定正确. 适合对 Kubernetes 有一定了解的同学。&lt;/p&gt;
&lt;/blockquote&gt;&lt;h2 id="前言" class="headerLink"&gt;
 &lt;a href="#%e5%89%8d%e8%a8%80" class="header-mark"&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近一直在学习 Kubernetes，但是手头没有个自有域名，要测试 ingress 就比较麻烦，每次都是手动改 hosts 文件。。&lt;/p&gt;</description></item><item><title>JWT 签名算法 HS256、RS256 及 ES256 及密钥生成</title><link>https://thiscute.world/posts/jwt-algorithm-key-generation/</link><pubDate>Tue, 03 Mar 2020 14:09:46 +0800</pubDate><guid>https://thiscute.world/posts/jwt-algorithm-key-generation/</guid><description>&lt;h1 id="签名算法" class="headerLink"&gt;
 &lt;a href="#%e7%ad%be%e5%90%8d%e7%ae%97%e6%b3%95" class="header-mark"&gt;&lt;/a&gt;签名算法&lt;/h1&gt;&lt;p&gt;介绍具体的 JWT 签名算法前，先解释一下签名、摘要/指纹、加密这几个名词的含义：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;数字签名(Digital Signature): 就和我们日常办理各种手续时需要在文件上签上你自己的名字一样，数字签名的主要用途也是用于身份认证。
&lt;ol&gt;
&lt;li&gt;更准确的讲，数字签名可保证数据的三个特性：真实性（未被伪造）、完整性（不存在缺失）、不可否认性（确实是由你本人认可并签名）&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;数字摘要(digest)/数字指纹(fingerprint): 指的是数据的 Hash 值。&lt;/li&gt;
&lt;li&gt;加密算法：这个应该不需要解释，就是对数据进行加密。。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;数字签名的具体实现，通常是先对数据进行一次 Hash 摘要(SHA1/SHA256/SHA512 等)，然后再使用非对称加密算法(RSA/ECDSA 等)的私钥对这个摘要进行加密，这样得到的结果就是原始数据的一个签名。&lt;/p&gt;</description></item><item><title>2019 年年终总结</title><link>https://thiscute.world/posts/2019-summary/</link><pubDate>Fri, 31 Jan 2020 19:19:00 +0800</pubDate><guid>https://thiscute.world/posts/2019-summary/</guid><description>&lt;blockquote&gt;
 &lt;p&gt;迟到的年终总结&lt;/p&gt;
&lt;/blockquote&gt;&lt;h2 id="闲言碎语" class="headerLink"&gt;
 &lt;a href="#%e9%97%b2%e8%a8%80%e7%a2%8e%e8%af%ad" class="header-mark"&gt;&lt;/a&gt;闲言碎语&lt;/h2&gt;&lt;p&gt;我是今年六月底到的深圳，运气很好，第一面就面上了现在所在的公司，以下就叫它 W 公司吧。公司的技术栈也很适合我，在入职到现在的这半年里，我学到了不少知识。&lt;/p&gt;
&lt;p&gt;但是运气也差，只有这么一家公司约了我面试，投的其他简历都石沉大海&amp;hellip;&lt;/p&gt;</description></item><item><title>Kubernetes 常见错误、原因及处理方法</title><link>https://thiscute.world/posts/kubernetes-common-errors-and-solutions/</link><pubDate>Sun, 24 Nov 2019 19:26:54 +0800</pubDate><guid>https://thiscute.world/posts/kubernetes-common-errors-and-solutions/</guid><description>&lt;h2 id="pod-常见错误" class="headerLink"&gt;
 &lt;a href="#pod-%e5%b8%b8%e8%a7%81%e9%94%99%e8%af%af" class="header-mark"&gt;&lt;/a&gt;Pod 常见错误&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;OOMKilled: Pod 的内存使用超出了 resources.limits 中的限制，被强制杀死。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cloud.tencent.com/developer/article/1411527" target="_blank" rel="noopener noreferrer"&gt;SandboxChanged: Pod sandbox changed, it will be killed and re-created&lt;/a&gt;:
很可能是由于内存限制导致容器被 OOMKilled，或者其他资源不足
&lt;ol&gt;
&lt;li&gt;如果是 OOM，容器通常会被重启，&lt;code&gt;kubectl describe&lt;/code&gt; 能看到容器上次被重启的原因&lt;code&gt;State.Last State.Reason = OOMKilled, Exit Code=137&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;</description></item><item><title>Manjaro 使用指南</title><link>https://thiscute.world/posts/manjaro-instruction/</link><pubDate>Sat, 13 Jul 2019 20:38:24 +0800</pubDate><guid>https://thiscute.world/posts/manjaro-instruction/</guid><description>&lt;p&gt;Manjaro 是一个基于 Arch Linux 的 Linux 滚动发行版，用着挺舒服的。最大的特点，是包仓库很丰富，而且都很新。代价是偶尔会出些小毛病。&lt;/p&gt;</description></item><item><title>SQLAlchemy 学习笔记（三）：ORM 中的关系构建</title><link>https://thiscute.world/posts/sqlalchemy-notes-3-relationship-and-foreignkey/</link><pubDate>Tue, 21 May 2019 22:19:00 +0800</pubDate><guid>https://thiscute.world/posts/sqlalchemy-notes-3-relationship-and-foreignkey/</guid><description>&lt;blockquote&gt;
 &lt;p&gt;个人笔记，不保证正确。&lt;/p&gt;
&lt;/blockquote&gt;&lt;h2 id="一关系构建foreignkey-与-relationship" class="headerLink"&gt;
 &lt;a href="#%e4%b8%80%e5%85%b3%e7%b3%bb%e6%9e%84%e5%bb%baforeignkey-%e4%b8%8e-relationship" class="header-mark"&gt;&lt;/a&gt;一、关系构建：&lt;code&gt;ForeignKey&lt;/code&gt; 与 &lt;code&gt;relationship&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;关系构建的重点，在于搞清楚这两个函数的用法。&lt;code&gt;ForeignKey&lt;/code&gt; 的用法已经在&lt;a href="https://www.cnblogs.com/kirito-c/p/10269485.html#%E8%A1%A8%E5%AE%9A%E4%B9%89%E4%B8%AD%E7%9A%84%E7%BA%A6%E6%9D%9F" target="_blank" rel="noopener noreferrer"&gt;SQL表达式语言 - 表定义中的约束&lt;/a&gt;
讲过了。主要是 &lt;code&gt;ondelete&lt;/code&gt; 和 &lt;code&gt;onupdate&lt;/code&gt; 两个参数的用法。&lt;/p&gt;</description></item><item><title>Python 并发编程：PoolExecutor 篇</title><link>https://thiscute.world/posts/python-concurrency-pool-executor/</link><pubDate>Fri, 15 Mar 2019 22:34:00 +0800</pubDate><guid>https://thiscute.world/posts/python-concurrency-pool-executor/</guid><description>&lt;blockquote&gt;
 &lt;p&gt;个人笔记，如有疏漏，还请指正。&lt;/p&gt;
&lt;/blockquote&gt;&lt;p&gt;使用多线程（threading）和多进程（multiprocessing）完成常规的并发需求，在启动的时候
start、join 等步骤不能省，复杂的需要还要用 1-2 个队列。随着需求越来越复杂，如果没有良好的设计和抽象这部分的功能层次，代码量越多调试的难度就越大。&lt;/p&gt;</description></item><item><title>Python 异步编程笔记：asyncio</title><link>https://thiscute.world/posts/python-asyncio/</link><pubDate>Thu, 14 Feb 2019 13:11:00 +0800</pubDate><guid>https://thiscute.world/posts/python-asyncio/</guid><description>&lt;blockquote&gt;
 &lt;p&gt;个人笔记，不保证正确。&lt;/p&gt;
&lt;/blockquote&gt;&lt;p&gt;虽然说看到很多人不看好 asyncio，但是这个东西还是必须学的。。基于协程的异步，在很多语言中都有，学会了 Python 的，就一通百通。&lt;/p&gt;</description></item><item><title>SQLAlchemy 学习笔记（二）：ORM 基础</title><link>https://thiscute.world/posts/sqlalchemy-notes-2-orm-basics/</link><pubDate>Mon, 11 Feb 2019 19:52:00 +0800</pubDate><guid>https://thiscute.world/posts/sqlalchemy-notes-2-orm-basics/</guid><description>&lt;p&gt;照例先看层次图&lt;/p&gt;
&lt;figure&gt;&lt;img src="https://thiscute.world/images/sqlalchemy-notes/sqlalchemy-arch.webp"&gt;&lt;figcaption&gt;
 &lt;h4&gt;SQLAlchemy 层次结构&lt;/h4&gt;
 &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h3 id="一声明映射关系" class="headerLink"&gt;
 &lt;a href="#%e4%b8%80%e5%a3%b0%e6%98%8e%e6%98%a0%e5%b0%84%e5%85%b3%e7%b3%bb" class="header-mark"&gt;&lt;/a&gt;一、声明映射关系&lt;/h3&gt;&lt;p&gt;使用 ORM 时，我们首先需要定义要操作的表（通过 &lt;code&gt;Table&lt;/code&gt;），然后再定义该表对应的 Python
class，并声明两者之间的映射关系（通过 &lt;code&gt;Mapper&lt;/code&gt;）。&lt;/p&gt;</description></item><item><title>WebSocket、HTTP/2 与 gRPC</title><link>https://thiscute.world/posts/websocket-http2-and-grpc/</link><pubDate>Mon, 11 Feb 2019 18:26:36 +0800</pubDate><guid>https://thiscute.world/posts/websocket-http2-and-grpc/</guid><description>&lt;h2 id="一websocket" class="headerLink"&gt;
 &lt;a href="#%e4%b8%80websocket" class="header-mark"&gt;&lt;/a&gt;一、WebSocket&lt;/h2&gt;&lt;p&gt;WebSocket 是一个双向通信协议，它在握手阶段采用 HTTP/1.1 协议（暂时不支持 HTTP/2）。&lt;/p&gt;</description></item><item><title>Chrome 与 Firefox-Dev 的 DevTools</title><link>https://thiscute.world/posts/web-browser-dev-tools/</link><pubDate>Mon, 11 Feb 2019 16:53:26 +0800</pubDate><guid>https://thiscute.world/posts/web-browser-dev-tools/</guid><description>&lt;p&gt;不管是做爬虫还是写 Web App，Chrome 和 Firefox 的 DevTools 都是超常用的，但是经常发现别人的截图有什么字段我找不到，别人的什么功能我的 Chrome 没有，仔细一搜索才知道，原来是我不会用。。&lt;/p&gt;</description></item><item><title>通过 systemctl 设置自定义 Service</title><link>https://thiscute.world/posts/systemd-basics/</link><pubDate>Mon, 28 Jan 2019 20:13:00 +0800</pubDate><guid>https://thiscute.world/posts/systemd-basics/</guid><description>&lt;h2 id="前言" class="headerLink"&gt;
 &lt;a href="#%e5%89%8d%e8%a8%80" class="header-mark"&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;如果要在Linux 上设置一个开机自启，出现问题自动重启，并且有良好日志的程序，比较流行的方法有&lt;code&gt;supervisord&lt;/code&gt;、&lt;code&gt;systemd&lt;/code&gt;，除此之外，还有 upstart、runit 等类似的工具。但是自从 systemd 被
ubuntu、centos 等主流 Linux 发行版应用以来，systemd 渐渐成为主流方案。&lt;/p&gt;</description></item><item><title>SQLAlchemy 学习笔记（一）：Engine 与 SQL 表达式语言</title><link>https://thiscute.world/posts/sqlalchemy-notes-1-engine-and-sql-expression-language/</link><pubDate>Mon, 21 Jan 2019 14:02:00 +0800</pubDate><guid>https://thiscute.world/posts/sqlalchemy-notes-1-engine-and-sql-expression-language/</guid><description>&lt;blockquote&gt;
 &lt;p&gt;个人笔记，如有错误烦请指正。&lt;/p&gt;
&lt;/blockquote&gt;&lt;p&gt;SQLAlchemy 是一个用 Python 实现的 ORM （Object Relational Mapping）框架，它由多个组件构成，这些组件可以单独使用，也能独立使用。它的组件层次结构如下：&lt;/p&gt;</description></item><item><title>SQL 基础笔记（三）约束</title><link>https://thiscute.world/posts/sql-basics-3-restrict/</link><pubDate>Sun, 20 Jan 2019 21:08:46 +0800</pubDate><guid>https://thiscute.world/posts/sql-basics-3-restrict/</guid><description>&lt;blockquote&gt;
 &lt;p&gt;个人笔记不保证正确。&lt;/p&gt;
&lt;/blockquote&gt;&lt;p&gt;数据类型是限制我们可以在表里存储什么数据的一种方法。不过，对于许多应用来说， 这种限制实在是太粗糙了。比如，一个包含产品价格的字段应该只接受正数。 但是没有哪种标准数据类型只接受正数。 另外一个问题是你可能需要根据其它字段或者其它行的数据来约束字段数据。比如， 在一个包含产品信息的表中，每个产品编号都应该只有一行。&lt;/p&gt;</description></item><item><title>Julia 学习笔记（一）：数组</title><link>https://thiscute.world/posts/julia-notes-1-array/</link><pubDate>Mon, 14 Jan 2019 19:51:00 +0800</pubDate><guid>https://thiscute.world/posts/julia-notes-1-array/</guid><description>&lt;blockquote&gt;
 &lt;p&gt;个人向，只会记录一些需要注意的点。&lt;/p&gt;
&lt;/blockquote&gt;&lt;h2 id="前言" class="headerLink"&gt;
 &lt;a href="#%e5%89%8d%e8%a8%80" class="header-mark"&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;学习 Julia 已经有一段时间了，但是进步缓慢。这一方面是最近代码写得少，一方面是 Julia 学习资料少、中文资料更少，但也有我没做笔记的缘故导致学习效率不佳。&lt;/p&gt;</description></item><item><title>常见压缩格式的区别，及 Linux 下的压缩相关指令</title><link>https://thiscute.world/posts/compression-related-instructions-under-linux/</link><pubDate>Mon, 14 Jan 2019 19:51:00 +0800</pubDate><guid>https://thiscute.world/posts/compression-related-instructions-under-linux/</guid><description>&lt;blockquote&gt;
 &lt;p&gt;可先浏览加粗部分&lt;/p&gt;
&lt;/blockquote&gt;&lt;h2 id="一常见压缩档" class="headerLink"&gt;
 &lt;a href="#%e4%b8%80%e5%b8%b8%e8%a7%81%e5%8e%8b%e7%bc%a9%e6%a1%a3" class="header-mark"&gt;&lt;/a&gt;一、常见压缩档&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;*.zip | zip 程序压缩打包的档案； （很常见，但是因为不包含文档名编码信息，跨平台可能会乱码）
*.rar | rar 程序压缩打包的档案；（在windows上很常见，但是是商业软件。）
*.gz | gzip 程序压缩的档案； （linux目前使用最广泛的压缩格式）
*.bz2 | bzip2 程序压缩的档案；
*.xz | xz 程序压缩的档案；
*.tar | tar 程序打包的资料，并没有压缩过；
*.tar.gz | tar 程序打包的档案，其中并且经过 gzip 的压缩 （最常见）
*.tar.bz2 | tar 程序打包的档案，其中并且经过 bzip2 的压缩
*.tar.xz | tar 程序打包的档案，其中并且经过 xz 的压缩 （新一代压缩选择）
*.7z | 7zip 程序压缩打包的档案。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;目前最常见的是 &lt;code&gt;tar.gz&lt;/code&gt; &lt;code&gt;tar.xz&lt;/code&gt; &lt;code&gt;tar.7z&lt;/code&gt; 这三种格式。&lt;/p&gt;</description></item><item><title>SQL 基础笔记（二）进阶查询</title><link>https://thiscute.world/posts/sql-basics-2-queries/</link><pubDate>Sun, 17 Jun 2018 14:17:46 +0800</pubDate><guid>https://thiscute.world/posts/sql-basics-2-queries/</guid><description>&lt;blockquote&gt;
 &lt;p&gt;本笔记整理自&lt;a href="https://book.douban.com/subject/24841239/" target="_blank" rel="noopener noreferrer"&gt;《SQL 基础教程》&lt;/a&gt;、&lt;a href="https://book.douban.com/subject/3354490/" target="_blank" rel="noopener noreferrer"&gt;《MySQL 必知必会》&lt;/a&gt;和网上资料。个人笔记不保证正确。&lt;/p&gt;
&lt;/blockquote&gt;&lt;h2 id="一复杂查询" class="headerLink"&gt;
 &lt;a href="#%e4%b8%80%e5%a4%8d%e6%9d%82%e6%9f%a5%e8%af%a2" class="header-mark"&gt;&lt;/a&gt;一、复杂查询&lt;/h2&gt;&lt;h3 id="视图" class="headerLink"&gt;
 &lt;a href="#%e8%a7%86%e5%9b%be" class="header-mark"&gt;&lt;/a&gt;视图&lt;/h3&gt;&lt;p&gt;将 SELECT 查询包装成一个虚拟表，该虚拟表就被称为视图。（因为只是一个包装，因此视图的数据也会随着原表的更新而更新）&lt;/p&gt;</description></item><item><title>SQL 基础笔记（一）</title><link>https://thiscute.world/posts/sql-basics-1/</link><pubDate>Fri, 15 Jun 2018 16:27:46 +0800</pubDate><guid>https://thiscute.world/posts/sql-basics-1/</guid><description>&lt;blockquote&gt;
 &lt;p&gt;本笔记整理自&lt;a href="https://book.douban.com/subject/24841239/" target="_blank" rel="noopener noreferrer"&gt;《SQL 基础教程》&lt;/a&gt;、&lt;a href="https://book.douban.com/subject/3354490/" target="_blank" rel="noopener noreferrer"&gt;《MySQL 必知必会》&lt;/a&gt;和网上资料。个人笔记不保证正确。&lt;/p&gt;
&lt;/blockquote&gt;&lt;h2 id="一基础" class="headerLink"&gt;
 &lt;a href="#%e4%b8%80%e5%9f%ba%e7%a1%80" class="header-mark"&gt;&lt;/a&gt;一、基础&lt;/h2&gt;&lt;p&gt;SQL，即结构化查询语言，是为访问与操作关系数据库中的数据而设计的语言。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;关系数据库以行(row)为单位读写数据&lt;/li&gt;
&lt;li&gt;SQL 根据功能的不同，可分为三类（其中DML用得最多，增删查改嘛）
&lt;ol&gt;
&lt;li&gt;DDL(Data Definition Language, 数据定义语言): CREATE/DROP/ALTER&lt;/li&gt;
&lt;li&gt;DML(Data Manipulation Language, 数据操作语言): SELECT/INSERT/UPDATE/DELETE&lt;/li&gt;
&lt;li&gt;DCL(Data Control Language, 数据控制语言): COMMIT/ROLLBACK/GRANT/REVOKE&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;SQL 语句要以分号结尾。换行在 SQL 中不表示结束，而等同于空格。&lt;/li&gt;
&lt;li&gt;SQL 不区分**关键字(Keyword)**的大小写，但是描述符就不一定了。
&lt;ul&gt;
&lt;li&gt;这里有个坑：MySQL 中，数据库和表其实就是数据目录下的目录和文件，因而，&lt;strong&gt;操作系统的敏感性决定数据库名和表名 是否大小写敏感&lt;/strong&gt;。这就意味着&lt;strong&gt;数据库名&lt;/strong&gt;和&lt;strong&gt;表名&lt;/strong&gt;在 Windows
中是大小写不敏感的，而在大多数类型的 Unix/Linux 系统中是大小写敏感的。（注意仅指数据库名和表名）可通过修改配置文件的&lt;code&gt;lower_case_table_names&lt;/code&gt;属性来统一这一行为。&lt;/li&gt;
&lt;li&gt;而&lt;strong&gt;字段名&lt;/strong&gt;、&lt;strong&gt;字段内容&lt;/strong&gt;都是内部数据，是操作系统无关的。它们的大小写敏感性，由
MySQL 的的校对（COLLATE）规则来控制。该规则体现在 MySQL 的 校对字符集（COLLATION）的后缀上：比如 utf8字符集，&lt;code&gt;utf8_general_ci&lt;/code&gt;表示不区分大小写，这个是 utf8 字符集默认的校对规则；&lt;code&gt;utf8_general_cs&lt;/code&gt; 表示区分大小写，&lt;code&gt;utf8_bin&lt;/code&gt; 表示二进制比较，同样也区分大小写 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SQL 中的字符串和日期需要用单引号引用起来，日期有特定格式&lt;code&gt;年-月-日&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;修改字符集：&lt;code&gt;set names &amp;lt;字符集名&amp;gt;&lt;/code&gt; 记住在 MySQL 中，utf-8mb4 才是完全的 utf-8字符集。&lt;/p&gt;</description></item><item><title>Python 视频转字符动画（二）进阶</title><link>https://thiscute.world/posts/video2chars-2/</link><pubDate>Fri, 25 May 2018 18:08:02 +0800</pubDate><guid>https://thiscute.world/posts/video2chars-2/</guid><description>&lt;blockquote&gt;
 &lt;p&gt;本文最初于 2018-05-25 发表在&lt;a href="https://www.cnblogs.com/kirito-c/p/9089873.html" target="_blank" rel="noopener noreferrer"&gt;博客园&lt;/a&gt;，2022-08-13 搬迁至&lt;a href="https://thiscute.world" target="_blank" rel="noopener noreferrer"&gt;https://thiscute.world&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;&lt;h3 id="0-话说在前头" class="headerLink"&gt;
 &lt;a href="#0-%e8%af%9d%e8%af%b4%e5%9c%a8%e5%89%8d%e5%a4%b4" class="header-mark"&gt;&lt;/a&gt;0. 话说在前头&lt;/h3&gt;&lt;p&gt;最新版使用了画布方式实现，和本文相比改动非常大，如果对旧版本的实现没啥兴趣，可以直接移步&lt;a href="https://github.com/ryan4yin/video2chars/blob/master/doc/README-zh-cn.md" target="_blank" rel="noopener noreferrer"&gt;video2chars&lt;/a&gt;，它的效果动画见 &lt;a href="https://www.bilibili.com/video/av30469888/" target="_blank" rel="noopener noreferrer"&gt;极乐净土&lt;/a&gt;。新版本的核心代码不算注释70行不到，功能更强大。&lt;/p&gt;</description></item><item><title>Java 中文编码分析</title><link>https://thiscute.world/posts/how-java-handles-chinese/</link><pubDate>Sun, 11 Mar 2018 16:39:00 +0800</pubDate><guid>https://thiscute.world/posts/how-java-handles-chinese/</guid><description>&lt;h3 id="一charat-与-codepointat" class="headerLink"&gt;
 &lt;a href="#%e4%b8%80charat-%e4%b8%8e-codepointat" class="header-mark"&gt;&lt;/a&gt;一、charAt 与 codePointAt&lt;/h3&gt;&lt;p&gt;我们知道 Java 内部使用的是 utf-16 作为它的 char、String 的字符编码方式，这里我们叫它内部字符集。而 utf-16 是变长编码，一个字符的编码被称为一个 code point，它可能是 16 位 —— 一个
code unit，也可能是 32 位 —— 两个 code unit。Java 的 char 类型长度为二字节，它对应的是
code unit。换句话说，一个字符的编码，可能需要用两个 char 来存储。&lt;/p&gt;</description></item><item><title>进程线程协程与并发并行</title><link>https://thiscute.world/posts/process-thread-coroutines-concurrency-parallelism/</link><pubDate>Tue, 23 Jan 2018 16:39:00 +0800</pubDate><guid>https://thiscute.world/posts/process-thread-coroutines-concurrency-parallelism/</guid><description>&lt;blockquote&gt;
 &lt;p&gt;个人笔记，不保证正确。&lt;/p&gt;
&lt;/blockquote&gt;&lt;h3 id="一进程-process并行运算分布式" class="headerLink"&gt;
 &lt;a href="#%e4%b8%80%e8%bf%9b%e7%a8%8b-process%e5%b9%b6%e8%a1%8c%e8%bf%90%e7%ae%97%e5%88%86%e5%b8%83%e5%bc%8f" class="header-mark"&gt;&lt;/a&gt;一、进程 Process：（并行运算，分布式）&lt;/h3&gt;&lt;p&gt;每一个进程，都可以看作是一个完整的 Program，它有自己完全独立的内容。不与其他进程直接共享数据。（一个工作(job)可以由多个 process 完成，例如电脑上的qq/360就会有好几个进程，这种程序可能会有一个守护进程，当主进程挂掉，它会自动重启主进程。）&lt;/p&gt;</description></item><item><title>欧几里得算法求最大公约数(GCD)的数学原理</title><link>https://thiscute.world/posts/mathematics-in-euclidean-gcd/</link><pubDate>Fri, 26 May 2017 23:58:53 +0800</pubDate><guid>https://thiscute.world/posts/mathematics-in-euclidean-gcd/</guid><description>&lt;p&gt;很早就学过欧几里得算法，但是一直不知道它的原理。几乎每本算法书都会提到它，但是貌似只有数学书上才会见到它的原理。。。&lt;/p&gt;
&lt;p&gt;前段时间粗粗看了点数论（《什么是数学》），惊讶于这个原理的奇妙。现在把它通俗地写下来，以免自己忘记。&lt;/p&gt;</description></item><item><title>Python 视频转字符动画（一）60 行代码</title><link>https://thiscute.world/posts/video2chars-1-basics/</link><pubDate>Tue, 18 Oct 2016 08:37:02 +0800</pubDate><guid>https://thiscute.world/posts/video2chars-1-basics/</guid><description>&lt;blockquote&gt;
 &lt;p&gt;本文最初于 2016-10-18 发表在&lt;a href="http://www.cnblogs.com/kirito-c/p/5971988.html" target="_blank" rel="noopener noreferrer"&gt;博客园&lt;/a&gt;，2022-08-13 搬迁至&lt;a href="https://thiscute.world" target="_blank" rel="noopener noreferrer"&gt;https://thiscute.world&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;&lt;p&gt;昨晚我朋友 @三十六咲 跟我说在网上看到了别人做的视频转字符动画，觉得很厉害，我于是也打算玩玩。今天中午花时间实现了这样一个小玩意。顺便把过程记录在这里。&lt;/p&gt;</description></item></channel></rss>